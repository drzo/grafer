{"version":3,"file":"colors.js","sources":["../../../../examples/src/data/colors.ts"],"sourcesContent":["import {html, render} from 'lit-html';\nimport '../../../src/grafer/GraferView';\n\nexport async function colors(container: HTMLElement): Promise<void> {\n\n    // create an array od colors to be used\n    const colors = [\n        /* 0 */ 'red',\n        /* 1 */ 'limegreen',\n        /* 2 */ [0, 0, 255],\n        /* 3 */ '#88c0d0',\n    ];\n\n    // create a 'points' data structure to hold all positional data\n    const points = {\n        data: [\n            { id: 'left', x: -8.6, y: 5.0 },\n            { id: 'right', x: 8.6, y: 5.0 },\n            { id: 'bottom', x: 0.0, y: -10.0 },\n            { id: 'center', x: 0.0, y: 0.0 },\n        ],\n    };\n\n    // nodes reference points and colors by their index\n    const nodes = {\n        data: [\n            { point: 'left', color: 0 },\n            { point: 'right', color: 1 },\n            { point: 'bottom', color: 2 },\n            { point: 'center', color: 3 },\n        ],\n    };\n\n    // edges also reference points and colors by their index\n    const edges = {\n        data: [\n            { source: 'left', target: 'right', sourceColor: 0, targetColor: 1 },\n            { source: 'right', target: 'bottom', sourceColor: 1, targetColor: 2 },\n            { source: 'bottom', target: 'left', sourceColor: 2, targetColor: 0 },\n\n            { source: 'center', target: 'left', sourceColor: 3, targetColor: 0 },\n            { source: 'center', target: 'right', sourceColor: 3, targetColor: 1 },\n            { source: 'center', target: 'bottom', sourceColor: 3, targetColor: 2 },\n        ],\n    };\n\n    const layers = [\n        { nodes, edges },\n    ];\n\n    // pass the points, colors and layers to grafer\n    render(html`<grafer-view class=\"grafer_container\" .colors=\"${colors}\" .points=\"${points}\" .layers=\"${layers}\"></grafer-view><mouse-interactions></mouse-interactions>`, container);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAGO,eAAe,MAAM,CAAC,SAAsB;;IAG/C,MAAM,MAAM,GAAG;gBACH,KAAK;gBACL,WAAW;gBACX,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;gBACX,SAAS;KACpB,CAAC;;IAGF,MAAM,MAAM,GAAG;QACX,IAAI,EAAE;YACF,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;YAC/B,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;YAC/B,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE;YAClC,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;SACnC;KACJ,CAAC;;IAGF,MAAM,KAAK,GAAG;QACV,IAAI,EAAE;YACF,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE;YAC3B,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;YAC5B,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE;YAC7B,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE;SAChC;KACJ,CAAC;;IAGF,MAAM,KAAK,GAAG;QACV,IAAI,EAAE;YACF,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;YACnE,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;YACrE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;YAEpE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;YACpE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;YACrE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;SACzE;KACJ,CAAC;IAEF,MAAM,MAAM,GAAG;QACX,EAAE,KAAK,EAAE,KAAK,EAAE;KACnB,CAAC;;IAGF,MAAM,CAAC,IAAI,CAAA,kDAAkD,MAAM,cAAc,MAAM,cAAc,MAAM,2DAA2D,EAAE,SAAS,CAAC,CAAC;AACvL;;;;"}
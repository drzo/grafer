{"version":3,"file":"circle.js","sources":["../../../../examples/src/nodes/circle.ts"],"sourcesContent":["import {html, render} from 'lit-html';\nimport '../../../src/grafer/GraferView';\n\nfunction createNodePoints(count: number, radius: number = 10.0): any[] {\n    const PI2 = Math.PI * 2;\n    const degStep = (PI2) / count;\n    const result = [];\n\n    for (let angle = 0, i = 0; angle < PI2; angle += degStep, ++i) {\n        const pX = Math.cos(angle) * radius;\n        const pY = Math.sin(angle) * radius;\n        result.push({\n            id: `p${i}-${radius}`,\n            x: pX,\n            y: pY,\n        });\n    }\n\n    return result;\n}\n\nexport async function circle(container: HTMLElement): Promise<void> {\n    const nodes = {\n        type: 'Circle',\n        data: [\n            ...createNodePoints(10, 10),\n            ...createNodePoints(5, 5),\n        ],\n    };\n\n    const layers = [\n        { nodes },\n    ];\n\n    render(html`<grafer-view class=\"grafer_container\" .layers=\"${layers}\"></grafer-view><mouse-interactions></mouse-interactions>`, container);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAGA,SAAS,gBAAgB,CAAC,KAAa,EAAE,SAAiB,IAAI;IAC1D,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACxB,MAAM,OAAO,GAAG,CAAC,GAAG,IAAI,KAAK,CAAC;IAC9B,MAAM,MAAM,GAAG,EAAE,CAAC;IAElB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,IAAI,OAAO,EAAE,EAAE,CAAC,EAAE;QAC3D,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QACpC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC;YACR,EAAE,EAAE,IAAI,CAAC,IAAI,MAAM,EAAE;YACrB,CAAC,EAAE,EAAE;YACL,CAAC,EAAE,EAAE;SACR,CAAC,CAAC;KACN;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAEM,eAAe,MAAM,CAAC,SAAsB;IAC/C,MAAM,KAAK,GAAG;QACV,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE;YACF,GAAG,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC;YAC3B,GAAG,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC;SAC5B;KACJ,CAAC;IAEF,MAAM,MAAM,GAAG;QACX,EAAE,KAAK,EAAE;KACZ,CAAC;IAEF,MAAM,CAAC,IAAI,CAAA,kDAAkD,MAAM,2DAA2D,EAAE,SAAS,CAAC,CAAC;AAC/I;;;;"}
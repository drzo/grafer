{"version":3,"file":"curvedPaths.js","sources":["../../../../examples/src/edges/curvedPaths.ts"],"sourcesContent":["import {html, render} from 'lit-html';\nimport '../../../src/grafer/GraferView';\n\nexport async function curvedPaths(container: HTMLElement): Promise<void> {\n\n    // create an array od colors to be used\n    const colors = [\n        /* 0 */ 'red',\n        /* 1 */ 'limegreen',\n        /* 2 */ [0, 0, 255],\n        /* 3 */ '#88c0d0',\n    ];\n\n    // create a 'points' data structure to hold all positional data\n    const points = {\n        data: [\n            { id: 'left', x: -8.6, y: 5.0 },\n            { id: 'right', x: 8.6, y: 5.0 },\n            { id: 'bottom', x: 0.0, y: -10.0, z: -5.0 },\n            { id: 'center', x: 0.0, y: 0.0, z: 5.0 },\n        ],\n    };\n\n    // nodes reference points\n    const nodes = {\n        data: [\n            { point: 'left', color: 3 },\n            { point: 'right', color: 1 },\n            { point: 'bottom', radius: 0.2 },\n            { point: 'center', radius: 0.2 },\n        ],\n        mappings: {\n            radius: (entry): number => entry.radius || 1,\n        },\n    };\n\n    // edges also reference points\n    const edges = {\n        type: 'CurvedPath',\n        data: [\n            { source: 'left', target: 'right', control: ['center', 'bottom'], sourceColor: 3, targetColor: 1 },\n        ],\n    };\n\n    const edgesDashed = {\n        type: 'Dashed',\n        data: [\n            { source: 'left', target: 'center' },\n            { source: 'center', target: 'bottom' },\n            { source: 'bottom', target: 'right' },\n        ],\n    };\n\n    const layers = [\n        { nodes, edges },\n        { edges: edgesDashed },\n    ];\n\n    // pass the points to grafer\n    render(html`<grafer-view class=\"grafer_container\" .colors=\"${colors}\" .points=\"${points}\" .layers=\"${layers}\"></grafer-view><mouse-interactions></mouse-interactions>`, container);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAGO,eAAe,WAAW,CAAC,SAAsB;;IAGpD,MAAM,MAAM,GAAG;gBACH,KAAK;gBACL,WAAW;gBACX,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;gBACX,SAAS;KACpB,CAAC;;IAGF,MAAM,MAAM,GAAG;QACX,IAAI,EAAE;YACF,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;YAC/B,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;YAC/B,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;YAC3C,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;SAC3C;KACJ,CAAC;;IAGF,MAAM,KAAK,GAAG;QACV,IAAI,EAAE;YACF,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE;YAC3B,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE;YAC5B,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE;YAChC,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE;SACnC;QACD,QAAQ,EAAE;YACN,MAAM,EAAE,CAAC,KAAK,KAAa,KAAK,CAAC,MAAM,IAAI,CAAC;SAC/C;KACJ,CAAC;;IAGF,MAAM,KAAK,GAAG;QACV,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE;YACF,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;SACrG;KACJ,CAAC;IAEF,MAAM,WAAW,GAAG;QAChB,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE;YACF,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;YACpC,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE;YACtC,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE;SACxC;KACJ,CAAC;IAEF,MAAM,MAAM,GAAG;QACX,EAAE,KAAK,EAAE,KAAK,EAAE;QAChB,EAAE,KAAK,EAAE,WAAW,EAAE;KACzB,CAAC;;IAGF,MAAM,CAAC,IAAI,CAAA,kDAAkD,MAAM,cAAc,MAAM,cAAc,MAAM,2DAA2D,EAAE,SAAS,CAAC,CAAC;AACvL;;;;"}
{"version":3,"file":"playground.js","sources":["../../../src/loaders/GraferLoader.ts","../../../src/loaders/LocalJSONL.ts","../../../examples/src/playground.ts"],"sourcesContent":["import {vec3} from 'gl-matrix';\n\nexport interface GraferLoaderVec3 {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface GraferLoaderDomain {\n    min: number;\n    max: number;\n}\n\n\n\ninterface GraferLoaderNodesStatsBase {\n    sizeDomain: GraferLoaderDomain;\n    coordsDomain: {\n        x: GraferLoaderDomain;\n        y: GraferLoaderDomain;\n        z: GraferLoaderDomain;\n    };\n    count: number;\n}\n\ninterface GraferLoaderNodesStatsCumulative extends GraferLoaderNodesStatsBase {\n    cumulative: GraferLoaderVec3;\n}\n\ninterface GraferLoaderNodesStatsCenter extends GraferLoaderNodesStatsBase {\n    center: GraferLoaderVec3;\n}\n\nexport interface GraferLoaderNodesStats extends GraferLoaderNodesStatsCenter {\n    cornerLength: number;\n}\n\nexport interface GraferLoaderNodes extends GraferLoaderNodesStatsCumulative {\n    points,\n    nodes,\n    map: Map<number, number>;\n    raw: any[],\n    positions: Float32Array;\n    sizes: Float32Array;\n    colors: Uint8Array;\n}\n\nexport interface GraferLoaderEdges {\n    raw: any[],\n    edges: any[],\n    positions: Float32Array;\n    colors: Uint8Array;\n}\n\nexport interface GraferLoader {\n    loadNodes: (file: File, palette: number[][]) => Promise<GraferLoaderNodes>;\n    loadEdges: (file: File, nodes: GraferLoaderNodes) => Promise<GraferLoaderEdges>;\n    loadMeta: (file: File) => Promise<any[]>;\n}\n\nexport function createGraferLoaderVec3(x: number = 0, y: number = 0, z: number = 0): GraferLoaderVec3 {\n    return { x, y, z };\n}\n\nexport function createGraferLoaderDomain(min: number = Number.MAX_SAFE_INTEGER, max: number = Number.MIN_SAFE_INTEGER): GraferLoaderDomain {\n    return { min, max };\n}\n\nexport function setGraferLoaderDomain(value: number, domain: GraferLoaderDomain = createGraferLoaderDomain()): GraferLoaderDomain {\n    domain.min = Math.min(domain.min, value);\n    domain.max = Math.max(domain.max, value);\n    return domain;\n}\n\nexport function mergeGraferLoaderDomain(a: GraferLoaderDomain, b: GraferLoaderDomain, out: GraferLoaderDomain = a): GraferLoaderDomain {\n    out.min = Math.min(a.min, b.min);\n    out.max = Math.max(a.max, b.max);\n    return out;\n}\n\nexport function normalizeNodeLayers(layers: GraferLoaderNodes[], reCenter:boolean = false, reSize: boolean = false): GraferLoaderNodesStats {\n    const center = createGraferLoaderVec3();\n    const sizeDomain = createGraferLoaderDomain();\n    const coordsDomain = {\n        x: createGraferLoaderDomain(),\n        y: createGraferLoaderDomain(),\n        z: createGraferLoaderDomain(),\n    };\n    let count = 0;\n\n    for (let i = 0, n = layers.length; i < n; ++i) {\n        center.x += layers[i].cumulative.x;\n        center.y += layers[i].cumulative.y;\n        center.z += layers[i].cumulative.z;\n        count += layers[i].count;\n\n        mergeGraferLoaderDomain(sizeDomain, layers[i].sizeDomain);\n        mergeGraferLoaderDomain(coordsDomain.x, layers[i].coordsDomain.x);\n        mergeGraferLoaderDomain(coordsDomain.y, layers[i].coordsDomain.y);\n        mergeGraferLoaderDomain(coordsDomain.z, layers[i].coordsDomain.z);\n    }\n\n    if (reCenter) {\n        center.x /= count;\n        center.y /= count;\n        center.z /= count;\n\n        coordsDomain.x.min -= center.x;\n        coordsDomain.x.max -= center.x;\n\n        coordsDomain.y.min -= center.y;\n        coordsDomain.y.max -= center.y;\n\n        coordsDomain.z.min -= center.z;\n        coordsDomain.z.max -= center.z;\n    } else {\n        center.x = 0;\n        center.y = 0;\n        center.z = 0;\n    }\n\n    const bbCorners = vec3.fromValues(\n        Math.max(Math.abs(coordsDomain.x.min), Math.abs(coordsDomain.x.max)),\n        Math.max(Math.abs(coordsDomain.y.min), Math.abs(coordsDomain.y.max)),\n        Math.max(Math.abs(coordsDomain.z.min), Math.abs(coordsDomain.z.max))\n    );\n    const cornerLength = vec3.len(bbCorners);\n\n    // resize the coordinates so the corner length is always 300 (because it looks nice)\n    // sorry future Dario, you'll have to explain this one out and then deal with it :(\n    const positionMult = reSize ? 300 / cornerLength : 1;\n    // scale the coordinates domain\n    coordsDomain.x.min *= positionMult;\n    coordsDomain.x.max *= positionMult;\n    coordsDomain.y.min *= positionMult;\n    coordsDomain.y.max *= positionMult;\n    coordsDomain.z.min *= positionMult;\n    coordsDomain.z.max *= positionMult;\n\n    // iterate through all the layers and apply the changes\n    for (let i = 0, n = layers.length; i < n; ++i) {\n        const layer = layers[i];\n        const positions = layer.positions;\n        const sizes = layer.sizes;\n        // iterate through all the nodes in each layer\n        for (let ii = 0, pi = 0, nn = layer.count; ii < nn; ++ii, pi += 3) {\n            // move the position to the center and then scale it\n            positions[pi] = (positions[pi] - center.x) * positionMult;\n            positions[pi + 1] = (positions[pi + 1] - center.y) * positionMult;\n            positions[pi + 2] = (positions[pi + 2] - center.z) * positionMult;\n\n            // normalize the sizes\n            if (sizeDomain.min !== sizeDomain.max) {\n                sizes[ii] = (sizes[ii] - sizeDomain.min) / (sizeDomain.max - sizeDomain.min);\n            } else {\n                sizes[ii] = 1;\n            }\n        }\n    }\n\n    return {\n        center,\n        sizeDomain,\n        coordsDomain,\n        count,\n        cornerLength: cornerLength * positionMult,\n    };\n}\n","import {DataFile} from '@dekkai/data-source/build/lib/file/DataFile';\nimport {\n    createGraferLoaderDomain,\n    createGraferLoaderVec3,\n    GraferLoader,\n    GraferLoaderEdges,\n    GraferLoaderNodes,\n    setGraferLoaderDomain,\n} from './GraferLoader';\n\nasync function parseJSONL(input, cb): Promise<void> {\n    const file = await DataFile.fromLocalSource(input);\n\n    // load 16MB chunks\n    const sizeOf16MB = 16 * 1024 * 1024;\n    const byteLength = file.byteLength;\n    const decoder = new TextDecoder();\n    const lineBreak = '\\n'.charCodeAt(0);\n\n    for(let offset = 0; offset <= byteLength; offset += sizeOf16MB) {\n        const chunkEnd = Math.min(offset + sizeOf16MB, byteLength);\n        const chunk = await file.loadData(offset, chunkEnd);\n        const view = new DataView(chunk);\n        let start = 0;\n        for (let i = 0, n = chunk.byteLength; i < n; ++i) {\n            if (view.getUint8(i) === lineBreak || offset + i === byteLength) {\n                const statementBuffer = new Uint8Array(chunk, start, i - start);\n                start = i + 1;\n\n                const str = decoder.decode(statementBuffer);\n                const json = JSON.parse(str);\n\n                cb(json);\n            }\n        }\n\n        if (start < chunk.byteLength) {\n            offset -= chunk.byteLength - start;\n        }\n\n        // console.log(`${chunkEnd} / ${byteLength} - ${((chunkEnd/byteLength) * 100).toFixed(2)}%`);\n    }\n}\n\nasync function loadNodes(file: File, palette: number[][] = []): Promise<GraferLoaderNodes> {\n    const colorMap: Map<number, number[]> = new Map();\n    const map: Map<number, number> = new Map();\n    const raw = [];\n    const points = [];\n    const nodes = [];\n    const positions = [];\n    const sizes = [];\n    const colors = [];\n    const cumulative = createGraferLoaderVec3();\n    const sizeDomain = createGraferLoaderDomain();\n    const coordsDomain = {\n        x: createGraferLoaderDomain(),\n        y: createGraferLoaderDomain(),\n        z: createGraferLoaderDomain(),\n    };\n\n    let count = 0;\n\n    await parseJSONL(file, (json: any): void => {\n        raw.push(json);\n\n        json.z = json.hasOwnProperty('z') ? json.z : 0.0;\n        const {x, y, z, id, ...node} = json;\n        points.push({\n            id,\n            x,\n            y,\n            z,\n        });\n        nodes.push({\n            point: id,\n            ...node,\n        });\n        positions.push(x, y, z);\n        map.set(json.id, count);\n\n        setGraferLoaderDomain(x, coordsDomain.x);\n        setGraferLoaderDomain(y, coordsDomain.y);\n        setGraferLoaderDomain(z, coordsDomain.z);\n\n        cumulative.x += x;\n        cumulative.y += y;\n        cumulative.z += z;\n\n        ++count;\n\n        const group = (json.group ?? json.clusterID ?? [0])[0];\n        if (group < palette.length) {\n            colors.push(...palette[group], 255);\n        } else {\n            if (!colorMap.has(group)) {\n                colorMap.set(group, [\n                    Math.round(Math.random() * 127 + 128),\n                    Math.round(Math.random() * 127 + 128),\n                    Math.round(Math.random() * 127 + 128),\n                ]);\n            }\n            colors.push(...colorMap.get(group), 255);\n        }\n\n        sizes.push(json.size);\n        setGraferLoaderDomain(json.size, sizeDomain);\n    });\n\n    return {\n        map,\n        raw,\n        points,\n        nodes,\n        positions: new Float32Array(positions),\n        sizes: new Float32Array(sizes),\n        colors: new Uint8Array(colors),\n        cumulative,\n        sizeDomain,\n        coordsDomain,\n        count,\n    };\n}\n\nasync function loadEdges(file: File, nodes: GraferLoaderNodes): Promise<GraferLoaderEdges> {\n    const raw = [];\n    const positions = [];\n    const colors = [];\n\n    await parseJSONL(file, json => {\n        if (nodes.map.has(json.source) && nodes.map.has(json.target)) {\n            raw.push(json);\n\n            const sourceIndex = nodes.map.get(json.source);\n            const targetIndex = nodes.map.get(json.target);\n\n            positions.push(\n                nodes.positions[sourceIndex * 3],\n                nodes.positions[sourceIndex * 3 + 1],\n                nodes.positions[sourceIndex * 3 + 2]\n            );\n\n            positions.push(\n                nodes.positions[targetIndex * 3],\n                nodes.positions[targetIndex * 3 + 1],\n                nodes.positions[targetIndex * 3 + 2]\n            );\n\n            colors.push(\n                nodes.colors[sourceIndex * 4],\n                nodes.colors[sourceIndex * 4 + 1],\n                nodes.colors[sourceIndex * 4 + 2],\n                nodes.colors[sourceIndex * 4 + 3]\n            );\n\n            colors.push(\n                nodes.colors[targetIndex * 4],\n                nodes.colors[targetIndex * 4 + 1],\n                nodes.colors[targetIndex * 4 + 2],\n                nodes.colors[targetIndex * 4 + 3]\n            );\n        }\n    });\n\n    return {\n        raw,\n        edges: raw,\n        positions: new Float32Array(positions),\n        colors: new Uint8Array(colors),\n    };\n}\n\nasync function loadMeta(file: File): Promise<any[]> {\n    const result = [];\n    await parseJSONL(file, json => {\n        result.push(json);\n    });\n    return result;\n}\n\nexport const LocalJSONL: GraferLoader = {\n    loadNodes,\n    loadEdges,\n    loadMeta,\n};\n","import {html, render} from 'lit-html';\n\n// import {Viewport} from '../../../src/renderer/Viewport';\nimport {ScrollDolly} from '../../src/UX/mouse/scroll/ScrollDolly';\nimport {DragTruck} from '../../src/UX/mouse/drag/DragTruck';\nimport {DragRotation} from '../../src/UX/mouse/drag/DragRotation';\nimport {DragPan} from '../../src/UX/mouse/drag/DragPan';\n\nimport Tweakpane from 'tweakpane';\nimport {FolderApi} from 'tweakpane/dist/types/api/folder';\nimport {LocalJSONL} from '../../src/loaders/LocalJSONL';\nimport {\n    GraferLoaderNodes,\n    GraferLoaderEdges,\n    normalizeNodeLayers,\n    GraferLoaderNodesStats,\n} from '../../src/loaders/GraferLoader';\nimport '../../src/grafer/GraferView';\nimport {GraferController} from '../../src/grafer/GraferController';\nimport {GraferInputColor} from '../../src/renderer/ColorRegistry';\nimport {DebugMenu} from '../../src/UX/debug/DebugMenu';\n\ninterface FilesSelector {\n    name: string;\n    ready: boolean;\n    nodes: string;\n    nodesFile: File | null;\n    edges: string;\n    edgesFile: File | null;\n    meta: string;\n    metaFile: File | null;\n}\n\ninterface LoadedLayer {\n    nodes: GraferLoaderNodes;\n    edges: GraferLoaderEdges;\n    meta: any[];\n}\n\ninterface LoadLayersResult {\n    layers: LoadedLayer[];\n    stats: GraferLoaderNodesStats;\n}\n\ninterface LoaderColor {\n    r: number;\n    g: number;\n    b: number;\n}\n\nconst kPolarNight: LoaderColor[] = [\n    { r: 59, g: 66, b: 82 },\n    { r: 67, g: 76, b: 94 },\n    { r: 76, g: 86, b: 106 },\n];\n\nconst kSnowStorm: LoaderColor[] = [\n    { r: 216, g: 222, b: 233 },\n    { r: 229, g: 233, b: 240 },\n    { r: 236, g: 239, b: 244 },\n];\n\nconst kFrost: LoaderColor[] = [\n    { r: 143, g: 188, b: 187 },\n    { r: 136, g: 192, b: 208 },\n    { r: 129, g: 161, b: 193 },\n    { r: 94, g: 129, b: 172 },\n];\n\nconst kAurora: LoaderColor[] = [\n    { r: 191, g: 97, b: 106 },\n    { r: 208, g: 135, b: 112 },\n    { r: 235, g: 203, b: 139 },\n    { r: 163, g: 190, b: 140 },\n    { r: 180, g: 142, b: 173 },\n];\n\nconst kGradient: LoaderColor[] = [\n    { r: 76, g: 86, b: 106 },\n    { r: 85, g: 95, b: 115 },\n    { r: 93, g: 103, b: 124 },\n    { r: 102, g: 112, b: 133 },\n    { r: 111, g: 121, b: 143 },\n    { r: 120, g: 130, b: 152 },\n    { r: 130, g: 140, b: 162 },\n    { r: 139, g: 149, b: 171 },\n    { r: 148, g: 159, b: 181 },\n    { r: 158, g: 168, b: 191 },\n    { r: 168, g: 178, b: 201 },\n    { r: 177, g: 188, b: 211 },\n    { r: 187, g: 198, b: 221 },\n    { r: 197, g: 208, b: 231 },\n    { r: 207, g: 218, b: 241 },\n    { r: 217, g: 228, b: 252 },\n    { r: 228, g: 238, b: 255 },\n    { r: 238, g: 248, b: 255 },\n    { r: 248, g: 255, b: 255 },\n    { r: 255, g: 255, b: 255 },\n];\n\nconst kColorPresets = [\n    { name: 'none', colors: null },\n    { name: 'polar night', colors: kPolarNight },\n    { name: 'snow storm', colors: kSnowStorm },\n    { name: 'frost', colors: kFrost },\n    { name: 'aurora', colors: kAurora },\n    { name: 'gradient', colors: kGradient },\n];\n\nconst colorsRgbToArr = (colors): GraferInputColor[] =>\n    colors.map(val => Object.values(val));\n\nfunction createColorsSelector(folder: FolderApi, colors: LoaderColor[]): void {\n    const dummy = { preset: 0 };\n    const presetOptions: {[key: string]: number} = {};\n    for (let i = 0, n = kColorPresets.length; i < n; ++i) {\n        presetOptions[kColorPresets[i].name] = i;\n    }\n    const preset = folder.addInput(dummy, 'preset', { options: presetOptions });\n    const remove = folder.addButton({ title: 'remove color' });\n\n    preset.on('change', (value: number): void => {\n        if (value > 0) {\n            colors.length = 0;\n            colors.push(...kColorPresets[value].colors);\n\n            const items = folder.controller.uiContainer.items;\n            while (items.length > 3) {\n                items[items.length - 3].viewModel.dispose();\n            }\n\n            for (let i = 0, n = colors.length; i < n; ++i) {\n                folder.addInput(colors, `${i}`, { index: i + 1 });\n            }\n\n            remove.hidden = colors.length <= 1;\n        }\n    });\n\n    for (let i = 0, n = colors.length; i < n; ++i) {\n        folder.addInput(colors, `${i}`, { index: i + 1 });\n    }\n\n    remove.hidden = colors.length <= 1;\n    remove.on('click', () => {\n        colors.pop();\n        const items = folder.controller.uiContainer.items;\n        items[items.length - 3].viewModel.dispose();\n        remove.hidden = colors.length <= 1;\n        dummy.preset = 0;\n        preset.refresh();\n    });\n\n    folder.addButton( { title: 'add color' }).on('click', () => {\n        const lastColor: LoaderColor = colors[colors.length - 1];\n        const color: LoaderColor = { r: lastColor.r, g: lastColor.g, b: lastColor.b };\n        colors.push(color);\n        folder.addInput(colors, `${colors.length -1}`, { index: colors.length });\n        remove.hidden = colors.length <= 1;\n        dummy.preset = 0;\n        preset.refresh();\n    });\n}\n\nfunction createFileInput(cb: () => void): HTMLInputElement {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.multiple = false;\n    input.addEventListener('change', cb);\n    return input;\n}\n\nlet gLayerCount = 0;\nfunction createFilesSelector(pane: Tweakpane, layers,  updateLoadBtn: () => void): FilesSelector {\n    const result = {\n        name: `layer_${gLayerCount++}`,\n        ready: false,\n        nodes: 'No file selected.',\n        nodesFile: null,\n        nodesMapping: '',\n        edges: 'No file selected.',\n        edgesFile: null,\n        edgesMapping: '',\n        meta: 'No file selected.',\n        metaFile: null,\n        colors:[...kAurora],\n    };\n    const layersInd = layers.length;\n    const folder = pane.addFolder({\n        title: result.name,\n        index: layersInd,\n    });\n    folder.addInput(result, 'name');\n\n    folder.addSeparator();\n\n    // createTypeSelector(folder, kNodeTypes, result, 'nodesType');\n    const nodesInput = createFileInput(() => {\n        if (nodesInput.files.length) {\n            result.nodesFile = nodesInput.files[0];\n            result.nodes = result.nodesFile.name;\n            result.ready = true;\n        } else {\n            result.nodes = 'No file selected.';\n            result.nodesFile = null;\n            result.ready = false;\n        }\n        updateLoadBtn();\n    });\n    folder.addMonitor(result, 'nodes');\n    folder.addButton({ title: 'browse...' }).on('click', () => nodesInput.click());\n    folder.addInput({nodesMapping: result.nodesMapping}, 'nodesMapping').on('change', stringVal => {\n        layers[layersInd].nodesMapping = stringVal;\n    });\n\n    folder.addSeparator();\n\n    const edgesInput = createFileInput(() => {\n        if (edgesInput.files.length) {\n            result.edgesFile = edgesInput.files[0];\n            result.edges = result.edgesFile.name;\n        } else {\n            result.edges = 'No file selected.';\n            result.edgesFile = null;\n        }\n    });\n    folder.addMonitor(result, 'edges');\n    folder.addButton({ title: 'browse...' }).on('click', () => edgesInput.click());\n    folder.addInput({edgesMapping: result.edgesMapping}, 'edgesMapping').on('change', stringVal => {\n        layers[layersInd].edgesMapping = stringVal;\n    });\n\n    folder.addSeparator();\n\n    const metaInput = createFileInput(() => {\n        if (metaInput.files.length) {\n            result.metaFile = metaInput.files[0];\n            result.meta = result.metaFile.name;\n        } else {\n            result.meta = 'No file selected.';\n            result.metaFile = null;\n        }\n    });\n    folder.addMonitor(result, 'meta');\n    folder.addButton({ title: 'browse...' }).on('click', () => metaInput.click());\n\n    folder.addSeparator();\n\n    const colors = folder.addFolder({ title: 'colors', expanded: false });\n    createColorsSelector(colors, result.colors);\n\n    folder.addSeparator();\n\n    const misc = folder.addFolder({ title: 'misc', expanded: false });\n    misc.addMonitor(result, 'ready');\n    misc.addButton({ title: 'remove layer'}).on('click', () => {\n        const i = layers.indexOf(result);\n        if (i !== -1) {\n            layers.splice(i, 1);\n            folder.dispose();\n            updateLoadBtn();\n        }\n    });\n\n    folder.addSeparator();\n\n    return result;\n}\n\nasync function loadLayers(layers): Promise<LoadLayersResult> {\n    const loadedLayers = [];\n\n    for (let i = 0, n = layers.length; i < n; ++i) {\n        loadedLayers.push({\n            nodes: await LocalJSONL.loadNodes(layers[i].nodesFile, []),\n            edges: null,\n            meta: null,\n        });\n    }\n\n    const stats = normalizeNodeLayers(loadedLayers.map(layer => layer.nodes));\n\n    for (let i = 0, n = layers.length; i < n; ++i) {\n        if (layers[i].edgesFile) {\n            loadedLayers[i].edges = await LocalJSONL.loadEdges(layers[i].edgesFile, loadedLayers[i].nodes);\n        }\n\n        if (layers[i].metaFile) {\n            loadedLayers[i].meta = await LocalJSONL.loadMeta(layers[i].metaFile);\n        }\n    }\n\n    return {\n        layers: loadedLayers,\n        stats,\n    };\n}\n\nexport async function playground(container: HTMLElement): Promise<void> {\n    render(html`<div id=\"menu\" class=\"start_menu\"></div>`, container);\n\n    const menu = new Tweakpane({\n        title: 'Grafer Loader',\n        container: document.querySelector('#menu'),\n    });\n\n    const layersFile = [];\n\n    const addBtn = menu.addButton({ title: 'add layer' });\n    const loadBtn = menu.addButton({ title: 'load' });\n    const updateLoadBtn = (): void => {\n        if (layersFile.length) {\n            for (let i = 0, n = layersFile.length; i < n; ++i) {\n                if (!layersFile[i].ready) {\n                    loadBtn.hidden = true;\n                    return;\n                }\n            }\n            loadBtn.hidden = false;\n        } else {\n            loadBtn.hidden = true;\n        }\n    };\n\n    loadBtn.hidden = true;\n    addBtn.on('click', () => {\n        layersFile.push(createFilesSelector(menu, layersFile, updateLoadBtn));\n        updateLoadBtn();\n    });\n\n    loadBtn.on('click', async (): Promise<void> => {\n        menu.dispose();\n        const loading = new Tweakpane({\n            title: 'loading...',\n            container: document.querySelector('#menu'),\n        });\n\n        try {\n            render(html`<canvas class=\"grafer_container\"></canvas><mouse-interactions></mouse-interactions>`, container);\n            const canvas = document.querySelector('.grafer_container') as HTMLCanvasElement;\n\n            const loaded = await loadLayers(layersFile);\n\n            const layers = [];\n            const colorsArr = [];\n            const pointsData = [];\n            const pointsMap = new Map();\n            loaded.layers.map((layer, layerInd) => {\n                const {nodesMapping, edgesMapping, colors} = layersFile[layerInd];\n                layers.push({\n                    nodes: {\n                        data: layer.nodes.nodes,\n                        mappings: nodesMapping\n                            ? (new Function(`return (${nodesMapping})`))()\n                            : {},\n                    },\n                    edges: {\n                        data: layer.edges ? layer.edges.edges : [],\n                        mappings: edgesMapping\n                            ? (new Function(`return (${edgesMapping})`))()\n                            : {},\n                    },\n                });\n                layer.nodes.points.map((point, pointInd) => {\n                    if(!pointsMap.has(point.id)) {\n                        pointsData.push(point);\n                        pointsMap.set(point.id, [layerInd, pointInd]);\n                    }\n                });\n                colorsArr.push(...colorsRgbToArr(colors));\n            });\n\n            const points = {\n                data: pointsData,\n            };\n\n            const grafer = new GraferController(canvas, { points, layers, colors: colorsArr });\n            const {viewport} = grafer;\n\n            const dolly = new ScrollDolly(viewport);\n            dolly.enabled = true;\n\n            const truck = new DragTruck(viewport);\n            truck.button = 'primary';\n            truck.enabled = true;\n\n            const rotation = new DragRotation(viewport);\n            rotation.button = 'secondary';\n            rotation.enabled = true;\n\n            const pan = new DragPan(viewport);\n            pan.button = 'auxiliary';\n            pan.enabled = true;\n\n            const debug = new DebugMenu(viewport);\n            debug.registerUX(dolly);\n            debug.registerUX(truck);\n            debug.registerUX(rotation);\n            debug.registerUX(pan);\n        } catch (e) {\n            loading.addMonitor({ error: e.toString() }, 'error');\n            throw e;\n        }\n\n        loading.dispose();\n    });\n}\n"],"names":["vec3.fromValues","vec3.len"],"mappings":"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AE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC1B,EAAE,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"}
{"version":3,"file":"bundledEdgesLoader.js","sources":["../../../examples/src/bundledEdgesLoader.ts"],"sourcesContent":["import {html, render} from 'lit-html';\nimport Tweakpane from 'tweakpane';\nimport {GraferController} from '../../src/grafer/GraferController';\nimport {DataFile} from '@dekkai/data-source/build/lib/file/DataFile';\nimport {DebugMenu} from '../../src/UX/debug/DebugMenu';\nimport {PointLabelPlacement} from '../../src/graph/labels/point/PointLabel';\n\ninterface LayoutInfo {\n    points: string;\n    pointsFile: File;\n    clusters: string;\n    clustersFile: File;\n    clusterEdgesMode: 'bundle' | 'straight' | 'curved',\n    clusterEdges: string;\n    clusterEdgesFile: File;\n    nodes: string;\n    nodesFile: File;\n    nodeEdges: string;\n    nodeEdgesFile: File;\n}\n\nasync function parseJSONL(input, cb): Promise<void> {\n    const file = await DataFile.fromLocalSource(input);\n\n    // load 16MB chunks\n    const sizeOf16MB = 16 * 1024 * 1024;\n    const byteLength = file.byteLength;\n    const decoder = new TextDecoder();\n    const lineBreak = '\\n'.charCodeAt(0);\n\n    for(let offset = 0; offset <= byteLength; offset += sizeOf16MB) {\n        const chunkEnd = Math.min(offset + sizeOf16MB, byteLength);\n        const chunk = await file.loadData(offset, chunkEnd);\n        const view = new DataView(chunk);\n        let start = 0;\n        for (let i = 0, n = chunk.byteLength; i < n; ++i) {\n            if (view.getUint8(i) === lineBreak || offset + i === byteLength) {\n                const statementBuffer = new Uint8Array(chunk, start, i - start);\n                start = i + 1;\n\n                const str = decoder.decode(statementBuffer);\n                const json = JSON.parse(str);\n\n                cb(json);\n            }\n        }\n\n        if (start < chunk.byteLength) {\n            offset -= chunk.byteLength - start;\n        }\n\n        // console.log(`${chunkEnd} / ${byteLength} - ${((chunkEnd/byteLength) * 100).toFixed(2)}%`);\n    }\n}\n\nfunction createFileInput(cb: () => void): HTMLInputElement {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.multiple = false;\n    input.addEventListener('change', cb);\n    return input;\n}\n\nfunction renderMenu(container: HTMLElement, cb: (result: LayoutInfo) => void): void {\n    render(html`<div id=\"menu\" class=\"start_menu\"></div>`, container);\n\n    const result: LayoutInfo = {\n        points: 'No file selected.',\n        pointsFile: null,\n        clusters: 'No file selected.',\n        clustersFile: null,\n        clusterEdgesMode: 'curved',\n        clusterEdges: 'No file selected.',\n        clusterEdgesFile: null,\n        nodes: 'No file selected.',\n        nodesFile: null,\n        nodeEdges: 'No file selected.',\n        nodeEdgesFile: null,\n    };\n\n    const menu = new Tweakpane({\n        title: 'Grafer Loader',\n        container: document.querySelector('#menu'),\n    });\n\n    const pointsInput = createFileInput(() => {\n        if (pointsInput.files.length) {\n            result.pointsFile = pointsInput.files[0];\n            result.points = result.pointsFile.name;\n        } else {\n            result.points = 'No file selected.';\n            result.pointsFile = null;\n        }\n    });\n    menu.addMonitor(result, 'points');\n    menu.addButton({ title: 'browse...' }).on('click', () => pointsInput.click());\n\n    menu.addSeparator();\n\n    const clustersInput = createFileInput(() => {\n        if (clustersInput.files.length) {\n            result.clustersFile = clustersInput.files[0];\n            result.clusters = result.clustersFile.name;\n        } else {\n            result.clusters = 'No file selected.';\n            result.clustersFile = null;\n        }\n    });\n    menu.addMonitor(result, 'clusters');\n    menu.addButton({ title: 'browse...' }).on('click', () => clustersInput.click());\n\n    menu.addInput(result, 'clusterEdgesMode', {\n        options: {\n            bundle: 'bundle',\n            straight: 'straight',\n            curved: 'curved',\n        },\n    });\n\n    const clusterEdgesInput = createFileInput(() => {\n        if (clusterEdgesInput.files.length) {\n            result.clusterEdgesFile = clusterEdgesInput.files[0];\n            result.clusterEdges = result.clusterEdgesFile.name;\n        } else {\n            result.clusterEdges = 'No file selected.';\n            result.clusterEdgesFile = null;\n        }\n    });\n    menu.addMonitor(result, 'clusterEdges');\n    menu.addButton({ title: 'browse...' }).on('click', () => clusterEdgesInput.click());\n\n    menu.addSeparator();\n\n    const nodesInput = createFileInput(() => {\n        if (nodesInput.files.length) {\n            result.nodesFile = nodesInput.files[0];\n            result.nodes = result.nodesFile.name;\n        } else {\n            result.nodes = 'No file selected.';\n            result.nodesFile = null;\n        }\n    });\n    menu.addMonitor(result, 'nodes');\n    menu.addButton({ title: 'browse...' }).on('click', () => nodesInput.click());\n\n    const nodeEdgesInput = createFileInput(() => {\n        if (nodeEdgesInput.files.length) {\n            result.nodeEdgesFile = nodeEdgesInput.files[0];\n            result.nodeEdges = result.nodeEdgesFile.name;\n        } else {\n            result.nodeEdges = 'No file selected.';\n            result.nodeEdgesFile = null;\n        }\n    });\n    menu.addMonitor(result, 'nodeEdges');\n    menu.addButton({ title: 'browse...' }).on('click', () => nodeEdgesInput.click());\n\n    const loadBtn = menu.addButton({ title: 'load' });\n    loadBtn.on('click', () => {\n        cb(result);\n    });\n}\n\nasync function loadGraph(container: HTMLElement, info: LayoutInfo): Promise<void> {\n    if (info.pointsFile) {\n        render(html`<canvas class=\"grafer_container\"></canvas>`, container);\n\n        const canvas = document.querySelector('.grafer_container') as HTMLCanvasElement;\n        const layers = [];\n\n        const points = {\n            data: [],\n        };\n\n        await parseJSONL(info.pointsFile, json => {\n            points.data.push(json);\n        });\n\n        const clusterBundleEdges = {\n            type: 'ClusterBundle',\n            data: [],\n            options: {\n                alpha: 0.04,\n                nearDepth: 0.9,\n            },\n        };\n\n        const clusterStraightEdges = {\n            type: 'Straight',\n            data: [],\n            options: {\n                alpha: 0.04,\n                nearDepth: 0.9,\n            },\n            mappings: {\n                source: (entry): number => 'sourceCluster' in entry ? entry.sourceCluster : entry.source,\n                target: (entry): number => 'targetCluster' in entry ? entry.targetCluster : entry.target,\n            },\n        };\n\n        const clusterCurvedEdges = {\n            type: 'CurvedPath',\n            data: [],\n            options: {\n                alpha: 0.04,\n                nearDepth: 0.9,\n            },\n        };\n\n        let edges;\n        if (info.clusterEdgesMode === 'bundle') {\n            edges = clusterBundleEdges;\n        } else if (info.clusterEdgesMode === 'curved') {\n            edges = clusterCurvedEdges;\n        } else {\n            edges = clusterStraightEdges;\n        }\n\n        const clusterLayer = {\n            name: 'Clusters',\n            labels: {\n                type: 'RingLabel',\n                data: [],\n                mappings: {\n                    background: (): boolean => false,\n                    fontSize: (): number => 14,\n                    padding: (): number => 0,\n                },\n                options: {\n                    visibilityThreshold: 160,\n                    repeatLabel: -1,\n                    repeatGap: 64,\n                },\n            },\n            edges,\n        };\n        layers.push(clusterLayer);\n\n        if (info.clustersFile) {\n            const nodes = clusterLayer.labels;\n            await parseJSONL(info.clustersFile, json => {\n                nodes.data.push(Object.assign({}, json, {\n                    color: 3,\n                }));\n            });\n        }\n\n        if (info.clusterEdgesFile) {\n            const edges = clusterLayer.edges;\n            await parseJSONL(info.clusterEdgesFile, json => {\n                edges.data.push(Object.assign({}, json, {\n                    sourceColor: 0,\n                    targetColor: 0,\n                }));\n            });\n        }\n\n        const nodeLayer = {\n            name: 'Nodes',\n            nodes: {\n                type: 'Circle',\n                data: [],\n            },\n            edges: {\n                data: [],\n                options: {\n                    alpha: 0.55,\n                    nearDepth: 0.9,\n                },\n            },\n            labels: {\n                type: 'PointLabel',\n                data: [],\n                mappings: {\n                    background: (): boolean => true,\n                    fontSize: (): number => 12,\n                    padding: (): [number, number] => [8, 5],\n                },\n                options: {\n                    visibilityThreshold: 8,\n                    labelPlacement: PointLabelPlacement.TOP,\n                },\n            },\n        };\n        layers.push(nodeLayer);\n\n        if (info.nodesFile) {\n            const nodes = nodeLayer.nodes;\n            await parseJSONL(info.nodesFile, json => {\n                nodes.data.push(Object.assign({}, json, {\n                    color: 1,\n                }));\n            });\n            nodeLayer.labels.data = nodes.data;\n        }\n\n\n        if (info.nodeEdgesFile) {\n            const edges = nodeLayer.edges;\n            await parseJSONL(info.nodeEdgesFile, json => {\n                edges.data.push(Object.assign({}, json, {\n                    sourceColor: 2,\n                    targetColor: 2,\n                }));\n            });\n        }\n\n        const colors = [\n            '#5e81ac',\n            '#d08770',\n            '#ebcb8b',\n            '#81a1c1',\n        ];\n\n        const controller = new GraferController(canvas, { points, colors, layers });\n        /* const debug = */ new DebugMenu(controller.viewport);\n        // debug.registerUX(dolly);\n        // debug.registerUX(truck);\n        // debug.registerUX(rotation);\n        // debug.registerUX(pan);\n    }\n}\n\nexport async function bundledEdgesLoader(container: HTMLElement): Promise<void> {\n    renderMenu(container, result => {\n        loadGraph(container, result);\n    });\n}\n"],"names":[],"mappings":"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"}
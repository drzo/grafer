{"version":3,"file":"GraferController.js","sources":["../../../src/renderer/Renderable.ts","../../../src/renderer/Camera.ts","../../../src/UX/UXModule.ts","../../../src/UX/mouse/MouseHandler.ts","../../../src/renderer/ColorRegistry.ts","../../../src/renderer/RectObserver.ts","../../../src/renderer/Viewport.ts","../../../src/data/DataTools.ts","../../../src/data/GraphPoints.ts","../../../src/graph/Graph.ts","../../../src/data/PointsReader.ts","../../../src/graph/LayerRenderable.ts","../../../src/graph/nodes/Nodes.ts","../../../src/renderer/OffscreenBuffer.ts","../../../src/UX/picking/PickingManager.ts","../../../src/graph/nodes/circle/Circle.ts","../../../src/graph/nodes/ring/Ring.ts","../../../src/graph/nodes/triangle/Triangle.ts","../../../src/graph/nodes/pentagon/Pentagon.ts","../../../src/graph/nodes/octagon/Octagon.ts","../../../src/graph/nodes/star/Star.ts","../../../src/graph/nodes/cross/Cross.ts","../../../src/graph/nodes/plus/Plus.ts","../../../src/graph/nodes/mod.ts","../../../src/graph/edges/Edges.ts","../../../src/graph/edges/straight/Straight.ts","../../../src/graph/edges/dashed/Dashed.ts","../../../src/graph/edges/gravity/Gravity.ts","../../../src/graph/edges/path/CurvedPath.ts","../../../src/graph/edges/bundle/ClusterBundle.ts","../../../src/graph/edges/mod.ts","../../../src/graph/labels/LabelAtlas.ts","../../../src/graph/labels/point/PointLabel.ts","../../../src/graph/labels/circular/CircularLabel.ts","../../../src/graph/labels/ring/RingLabel.ts","../../../src/graph/labels/mod.ts","../../../src/graph/Layer.ts","../../../src/UX/mouse/drag/DragModule.ts","../../../src/UX/mouse/drag/DragTruck.ts","../../../src/UX/mouse/drag/DragRotation.ts","../../../src/UX/mouse/scroll/ScrollModule.ts","../../../src/UX/mouse/scroll/ScrollDolly.ts","../../../src/UX/mouse/drag/DragPan.ts","../../../src/grafer/GraferController.ts"],"sourcesContent":["import {mat4, vec2, vec4} from 'gl-matrix';\nimport PicoGL, {App, DrawCall, Texture, VertexArray, VertexBuffer} from 'picogl';\n\nexport type GLDataTypes<T> = {\n    [key in keyof T]?: GLenum | readonly GLenum[];\n};\n\nexport interface GLDataTypesInfo {\n    keys: string[];\n    stride: number;\n}\n\nexport interface RenderableShaders {\n    vs: string;\n    fs: string;\n}\n\nexport enum RenderMode {\n    DRAFT,\n    MEDIUM,\n    HIGH_PASS_1,\n    HIGH_PASS_2,\n    PICKING,\n}\n\nexport interface RenderUniforms {\n    uViewMatrix: mat4;\n    uSceneMatrix: mat4;\n    uProjectionMatrix: mat4;\n    uViewportSize: vec2;\n    uPixelRatio: number;\n    uClearColor: vec4;\n    uColorPalette: Texture;\n    uRenderMode: RenderMode;\n}\n\nexport type GenericUniforms = { [key: string]: number | number[] | boolean | Texture };\n\nexport interface Renderable {\n    enabled: boolean;\n    render(context: App, mode: RenderMode, uniforms: RenderUniforms): void;\n}\n\n/* TOOLS */\nexport const GL_TYPE_SIZE = {\n    [PicoGL.BYTE]: 1,\n    [PicoGL.UNSIGNED_BYTE]: 1,\n    [PicoGL.SHORT]: 2,\n    [PicoGL.UNSIGNED_SHORT]: 2,\n    [PicoGL.INT]: 4,\n    [PicoGL.UNSIGNED_INT]: 4,\n    [PicoGL.FLOAT]: 4,\n};\n\nexport const GL_TYPE_GETTER = {\n    [PicoGL.BYTE]: (view: DataView, offset: number): number => view.getInt8(offset),\n    [PicoGL.UNSIGNED_BYTE]: (view: DataView, offset: number): number => view.getUint8(offset),\n    [PicoGL.SHORT]: (view: DataView, offset: number): number => view.getInt16(offset, true),\n    [PicoGL.UNSIGNED_SHORT]: (view: DataView, offset: number): number => view.getUint16(offset, true),\n    [PicoGL.INT]: (view: DataView, offset: number): number => view.getInt32(offset, true),\n    [PicoGL.UNSIGNED_INT]: (view: DataView, offset: number): number => view.getUint32(offset, true),\n    [PicoGL.FLOAT]: (view: DataView, offset: number): number => view.getFloat32(offset, true),\n};\n\nexport const GL_TYPE_SETTER = {\n    [PicoGL.BYTE]: (view: DataView, offset: number, value: number): void => view.setInt8(offset, value),\n    [PicoGL.UNSIGNED_BYTE]: (view: DataView, offset: number, value: number): void => view.setUint8(offset, value),\n    [PicoGL.SHORT]: (view: DataView, offset: number, value: number): void => view.setInt16(offset, value, true),\n    [PicoGL.UNSIGNED_SHORT]: (view: DataView, offset: number, value: number): void => view.setUint16(offset, value, true),\n    [PicoGL.INT]: (view: DataView, offset: number, value: number): void => view.setInt32(offset, value, true),\n    [PicoGL.UNSIGNED_INT]: (view: DataView, offset: number, value: number): void => view.setUint32(offset, value, true),\n    [PicoGL.FLOAT]: (view: DataView, offset: number, value: number): void => view.setFloat32(offset, value, true),\n};\n\nexport function glDataTypeSize(type: GLenum | GLenum[]): number {\n    return Array.isArray(type) ? GL_TYPE_SIZE[type[0]] * type.length : GL_TYPE_SIZE[type];\n}\n\nexport function glIntegerType(type: GLenum): number {\n    return type === PicoGL.FLOAT ? 0 : 1;\n}\n\nexport function glDataTypesInfo<T>(types: GLDataTypes<T>): GLDataTypesInfo {\n    const mappingsKeys = Object.keys(types);\n    const keys = [];\n    let stride = 0;\n    for (let i = 0, n = mappingsKeys.length; i < n; ++i) {\n        if (types[mappingsKeys[i]]) {\n            stride += glDataTypeSize(types[mappingsKeys[i]]);\n            keys.push(mappingsKeys[i]);\n        }\n    }\n    return {\n        keys,\n        stride,\n    };\n}\n\nexport function setDrawCallUniforms(drawCall: DrawCall, uniforms: GenericUniforms | RenderUniforms): void {\n    for (const [key, value] of Object.entries(uniforms)) {\n        if (value.texture) {\n            drawCall.texture(key, value);\n        } else {\n            drawCall.uniform(key, value);\n        }\n    }\n}\n\nexport function configureVAO<T>(\n    vao: VertexArray,\n    vbo: VertexBuffer,\n    types: GLDataTypes<T>,\n    typesInfo: GLDataTypesInfo,\n    attrIndex: number = 0,\n    instanced: boolean = false\n): void {\n    const functionKey = instanced ? 'instanceAttributeBuffer' : 'vertexAttributeBuffer';\n    const stride = typesInfo.stride;\n    let offset = 0;\n    for (let i = 0, n = typesInfo.keys.length; i < n; ++i) {\n        const type = types[typesInfo.keys[i]];\n        const glType = Array.isArray(type) ? type[0] : type;\n        const size = Array.isArray(type) ? type.length : 1;\n        vao[functionKey](attrIndex + i, vbo, {\n            type: glType,\n            integer: glIntegerType(glType),\n            size,\n            stride,\n            offset,\n        });\n        offset += glDataTypeSize(type);\n    }\n}\n\n\n","import {vec2, vec3, mat4, quat} from 'gl-matrix';\n\nexport class Camera {\n    private _aovRad: number = 0;\n    public get aovRad(): number {\n        return this._aovRad;\n    }\n    public set aovRad(value: number) {\n        this._aovRad = value;\n        this._aov = value * 57.29577951308232; // 180 / PI\n        this.calculateProjectionMatrix();\n    }\n\n    private _aov: number = 0;\n    public get aov(): number {\n        return this._aov;\n    }\n    public set aov(value: number) {\n        this._aov = value;\n        this._aovRad = value * 0.017453292519943295; // PI / 180\n        this.calculateProjectionMatrix();\n    }\n\n    private _nearPlane: number = 1;\n    public get nearPlane(): number {\n        return this._nearPlane;\n    }\n    public set nearPlane(value: number) {\n        this._nearPlane = value;\n        this.calculateProjectionMatrix();\n    }\n\n    private _farPlane: number = 1000;\n    public get farPlane(): number {\n        return this._farPlane;\n    }\n    public set farPlane(value: number) {\n        this._farPlane = value;\n        this.calculateProjectionMatrix();\n    }\n\n    private _viewportSize: vec2;\n    public get viewportSize(): vec2 {\n        return this._viewportSize;\n    }\n    public set viewportSize(value: vec2) {\n        vec2.copy(this._viewportSize, value);\n        this._aspect = this._viewportSize[0] / this._viewportSize[1];\n        this.calculateProjectionMatrix();\n    }\n\n    private _position: vec3;\n    public get position(): vec3 {\n        return this._position;\n    }\n    public set position(value: vec3) {\n        vec3.copy(this._position, value);\n    }\n\n    private _rotation: quat;\n    public get rotation(): quat {\n        return this._rotation;\n    }\n    public set rotation(value: quat) {\n        quat.copy(this._rotation, value);\n    }\n\n    private _target: vec3;\n    public get target(): vec3 {\n        return this._target;\n    }\n    public set target(value: vec3) {\n        vec3.copy(this._target, value);\n    }\n\n    private _aspect: number;\n    public get aspect(): number {\n        return this._aspect;\n    }\n\n    private _viewMatrix: mat4;\n    public get viewMatrix(): mat4 {\n        mat4.fromQuat(this._viewMatrix, this._rotation);\n        mat4.translate(this._viewMatrix, this._viewMatrix, this._position);\n        return this._viewMatrix;\n    }\n\n    private _projectionMatrix: mat4;\n    public get projectionMatrix(): mat4 {\n        return this._projectionMatrix;\n    }\n\n    constructor(viewportSize: vec2, position: vec3 = vec3.fromValues(0, 0, -1)) {\n        this._position = vec3.create();\n        vec3.copy(this._position, position);\n\n        this._rotation = quat.fromEuler(quat.create(), 0, 0, 0);\n        this._viewMatrix = mat4.create();\n\n        this._projectionMatrix = mat4.create();\n        this._viewportSize = vec2.copy(vec2.create(), viewportSize);\n        this._aspect = this._viewportSize[0] / this._viewportSize[1];\n        this.aov = 45;\n\n        this.calculateProjectionMatrix();\n    }\n\n    public rotate(rotation: quat): void {\n        quat.mul(this._rotation, rotation, this._rotation);\n    }\n\n    private calculateProjectionMatrix(): void {\n        mat4.perspective(\n            this._projectionMatrix,\n            this._aovRad,\n            this._aspect,\n            this._nearPlane,\n            this._farPlane\n        );\n    }\n}\n","export abstract class UXModule {\n    protected _enabled: boolean = false;\n    public get enabled(): boolean {\n        return this._enabled;\n    }\n\n    public set enabled(value: boolean) {\n        if (value !== this._enabled) {\n            this._enabled = value;\n            if (this._enabled) {\n                this.hookEvents();\n            } else {\n                this.unhookEvents();\n            }\n        }\n    }\n\n    protected abstract hookEvents(): void;\n    protected abstract unhookEvents(): void;\n}\n","import {EventEmitter} from '@dekkai/event-emitter/build/lib/EventEmitter';\nimport {vec2} from 'gl-matrix';\nimport {UXModule} from '../UXModule';\n\nconst kEvents = {\n    move: Symbol('Grafer::UX::MouseHandler::move'),\n    down: Symbol('Grafer::UX::MouseHandler::down'),\n    up: Symbol('Grafer::UX::MouseHandler::up'),\n    click: Symbol('Grafer::UX::MouseHandler::click'),\n    wheel: Symbol('Grafer::UX::MouseHandler::wheel'),\n};\nObject.freeze(kEvents);\n\nexport const kButton2Index = {\n    primary: 1,\n    secondary: 2,\n    auxiliary: 4,\n    fourth: 8,\n    fifth: 16,\n};\nObject.freeze(kButton2Index);\n\nexport const kIndex2Button = {\n    1: 'primary',\n    2: 'secondary',\n    4: 'auxiliary',\n    8: 'fourth',\n    16: 'fifth',\n};\nObject.freeze(kIndex2Button);\n\ninterface EventEntry {\n    event: symbol;\n    args: any[];\n}\n\nexport interface MouseState {\n    valid: boolean;\n    clientCoords: vec2;\n    canvasCoords: vec2;\n    glCoords: vec2;\n    deltaCoords: vec2;\n    wheel: number;\n    buttons: {\n        primary: boolean;\n        secondary: boolean;\n        auxiliary: boolean;\n        fourth: boolean;\n        fifth: boolean;\n    };\n}\n\nexport type MouseHandlerEventsMap = { [K in keyof typeof kEvents]: ReturnType<() => { readonly 0: unique symbol }[0]> };\nexport type MouseHandlerEvent = MouseHandlerEventsMap[keyof MouseHandlerEventsMap];\nexport type MouseButtonIndex = keyof typeof kIndex2Button & number;\nexport type MouseButtonName = keyof typeof kButton2Index;\nexport type MouseMoveHandler = (event: MouseHandlerEvent, state: MouseState, delta: vec2, canvasCoords: vec2) => void;\nexport type MouseDownHandler = (event: MouseHandlerEvent, state: MouseState, buttonIndex: MouseButtonIndex, buttonName: MouseButtonName, pressed: boolean) => void;\nexport type MouseUpHandler = (event: MouseHandlerEvent, state: MouseState, buttonIndex: MouseButtonIndex, buttonName: MouseButtonName, pressed: boolean) => void;\nexport type MouseClickHandler = (event: MouseHandlerEvent, state: MouseState, buttonIndex: MouseButtonIndex, buttonName: MouseButtonName) => void;\nexport type MouseWheelHandler = (event: MouseHandlerEvent, state: MouseState, wheel: number) => void;\nexport type MouseCallback = MouseMoveHandler | MouseDownHandler | MouseUpHandler | MouseClickHandler | MouseWheelHandler;\n\nexport class MouseHandler extends EventEmitter.mixin(UXModule) {\n    public static get events(): MouseHandlerEventsMap {\n        return kEvents as MouseHandlerEventsMap;\n    }\n\n    private canvas: HTMLCanvasElement;\n    private rect: DOMRectReadOnly;\n    private pixelRatio: number;\n    private state: MouseState;\n    private newState: MouseState;\n    private boundHandler: (e: MouseEvent) => void = this.handleMouseEvent.bind(this);\n    private disableContextMenu: (e: Event) => void = (e: Event) => e.preventDefault();\n\n    constructor(canvas: HTMLCanvasElement, rect: DOMRectReadOnly, pixelRatio: number, enabled: boolean = true) {\n        super();\n        this.canvas = canvas;\n        this.rect = rect;\n        this.pixelRatio = pixelRatio;\n\n        this.state = {\n            valid: false,\n            clientCoords: vec2.create(),\n            canvasCoords: vec2.create(),\n            glCoords: vec2.create(),\n            deltaCoords: vec2.create(),\n            wheel: 0,\n            buttons: {\n                primary: false,\n                secondary: false,\n                auxiliary: false,\n                fourth: false,\n                fifth: false,\n            },\n        };\n\n        this.newState = {\n            valid: false,\n            clientCoords: vec2.create(),\n            canvasCoords: vec2.create(),\n            glCoords: vec2.create(),\n            deltaCoords: vec2.create(),\n            wheel: 0,\n            buttons: {\n                primary: false,\n                secondary: false,\n                auxiliary: false,\n                fourth: false,\n                fifth: false,\n            },\n        };\n\n        this.enabled = enabled;\n    }\n\n    public on(type: MouseHandlerEvent, callback: MouseCallback): void {\n        super.on(type, callback);\n    }\n\n    public off(type: MouseHandlerEvent, callback: MouseCallback): void {\n        super.off(type, callback);\n    }\n\n    public resize(rect: DOMRect, pixelRatio: number): void {\n        this.rect = rect;\n        this.pixelRatio = pixelRatio;\n        this.syntheticUpdate(kEvents.move);\n    }\n\n    protected hookEvents(): void {\n        this.canvas.addEventListener('mouseenter', this.boundHandler);\n        this.canvas.addEventListener('mouseleave', this.boundHandler);\n        this.canvas.addEventListener('mousemove', this.boundHandler);\n        this.canvas.addEventListener('mousedown', this.boundHandler);\n        this.canvas.addEventListener('mouseup', this.boundHandler);\n        this.canvas.addEventListener('click', this.boundHandler);\n        this.canvas.addEventListener('wheel', this.boundHandler);\n\n        this.canvas.addEventListener('contextmenu', this.disableContextMenu);\n    }\n\n    protected unhookEvents(): void {\n        this.canvas.removeEventListener('mouseenter', this.boundHandler);\n        this.canvas.removeEventListener('mouseleave', this.boundHandler);\n        this.canvas.removeEventListener('mousemove', this.boundHandler);\n        this.canvas.removeEventListener('mousedown', this.boundHandler);\n        this.canvas.removeEventListener('mouseup', this.boundHandler);\n        this.canvas.removeEventListener('click', this.boundHandler);\n        this.canvas.removeEventListener('wheel', this.boundHandler);\n\n        this.canvas.removeEventListener('contextmenu', this.disableContextMenu);\n    }\n\n    public syntheticUpdate(event: symbol, buttonIndex?: number): void {\n        switch (event) {\n            case kEvents.up:\n            case kEvents.down:\n            case kEvents.click:\n                this.emitEvents([{\n                    event,\n                    args: [buttonIndex, kIndex2Button[buttonIndex]],\n                }]);\n                break;\n\n            case kEvents.move:\n                this.emitEvents([{\n                    event,\n                    args: [vec2.fromValues(0, 0), this.state.canvasCoords],\n                }]);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    private update(state: MouseState): void {\n        const events: EventEntry[] = [];\n        if (state.deltaCoords[0] !== 0 || state.deltaCoords[1] !== 0) {\n            if (state.valid) {\n                events.push({\n                    event: kEvents.move,\n                    args: [state.deltaCoords, state.canvasCoords],\n                });\n            }\n        }\n\n        const buttonKeys = Object.keys(state.buttons);\n        for (let i = 0, n = buttonKeys.length; i < n; ++i) {\n            const key = buttonKeys[i];\n            const pressed = state.valid && state.buttons[key];\n            if (this.state.buttons[key] !== pressed) {\n                this.state.buttons[key] = pressed;\n                events.push({\n                    event: pressed ? kEvents.down : kEvents.up,\n                    args: [kButton2Index[key], key, pressed],\n                });\n            }\n        }\n        this.setMouseState(state);\n        this.emitEvents(events);\n    }\n\n    private emitEvents(entries: EventEntry[]): void {\n        for (let i = 0, n = entries.length; i < n; ++i) {\n            this.emit(entries[i].event, this.state, ...entries[i].args);\n        }\n    }\n\n    private setMouseState(state: MouseState): void {\n        this.state.valid = state.valid;\n        vec2.copy(this.state.clientCoords, state.clientCoords);\n        vec2.copy(this.state.canvasCoords, state.canvasCoords);\n        vec2.copy(this.state.glCoords, state.glCoords);\n        vec2.copy(this.state.deltaCoords, state.deltaCoords);\n        this.state.wheel = state.wheel;\n        Object.assign(this.state.buttons, state.buttons);\n    }\n\n    private handleClickEvent(e: MouseEvent, state: MouseState): void {\n        this.setMouseState(state);\n        this.emitEvents([{\n            event: kEvents.click,\n            args: [e.button, kIndex2Button[e.button]],\n        }]);\n    }\n\n    private handleWheelEvent(e: WheelEvent, state: MouseState): void {\n        this.setMouseState(state);\n\n        let delta;\n        if ('wheelDeltaY' in e) {\n            delta = -(e as any).wheelDeltaY / 120;\n        } else {\n            delta = (e.deltaY < 1) ? -1 : 1;\n        }\n\n        this.emitEvents([{\n            event: kEvents.wheel,\n            args: [delta],\n        }]);\n    }\n\n    private handleMouseEvent(e: MouseEvent): void {\n        const client = this.newState.clientCoords;\n        const canvas = this.newState.canvasCoords;\n        const gl = this.newState.glCoords;\n        const delta = this.newState.deltaCoords;\n        const rect = this.rect;\n\n        vec2.set(client, e.clientX, e.clientY);\n        vec2.set(canvas, e.clientX - rect.left, e.clientY - rect.top);\n        vec2.set(gl, (e.clientX - rect.left) * this.pixelRatio, (rect.bottom - e.clientY) * this.pixelRatio);\n\n        if (e.type === 'mousemove') {\n            vec2.set(delta, e.movementX, e.movementY);\n        } else {\n            vec2.set(delta, 0, 0);\n        }\n\n        this.newState.valid = Boolean(\n            canvas[0] >= rect.left && canvas[0] <= rect.right &&\n            canvas[1] >= 0 && canvas[1] <= rect.height\n        );\n\n        this.newState.buttons.primary = Boolean(e.buttons & 1);\n        this.newState.buttons.secondary = Boolean(e.buttons & 2);\n        this.newState.buttons.auxiliary = Boolean(e.buttons & 4);\n        this.newState.buttons.fourth = Boolean(e.buttons & 8);\n        this.newState.buttons.fifth = Boolean(e.buttons & 16);\n\n        switch (e.type) {\n            case 'click':\n                this.handleClickEvent(e, this.newState);\n                break;\n\n            case 'wheel':\n                this.handleWheelEvent(e as WheelEvent, this.newState);\n                break;\n\n            case 'mouseleave':\n                this.newState.valid = false;\n                /* fallthrough */\n            default:\n                this.update(this.newState);\n                break;\n        }\n    }\n}\n","import {App, Texture} from 'picogl';\nimport {vec2} from 'gl-matrix';\nimport chroma from 'chroma-js';\n\nexport type GraferInputColor = [number, number, number] | string | number;\n\nexport class ColorRegistry {\n    private context: App;\n    private dirty: boolean = false;\n\n    private _texture: Texture;\n    public get texture(): Texture {\n        this.update();\n        return this._texture;\n    }\n\n    public get capacity(): number {\n        return this.textureSize[0] * this.textureSize[1];\n    }\n\n    public get length(): number {\n        return this.colorMap.size;\n    }\n\n    private textureSize: vec2;\n    private colorMap: Map<string, number>;\n\n    constructor(context: App, initialCapacity: number = 1024) {\n        this.context = context;\n        this.colorMap = new Map();\n        this.textureSize = vec2.create();\n        this.resizeTexture(initialCapacity);\n    }\n\n    public update(): void {\n        if (this.dirty) {\n            if (this.colorMap.size > this.capacity) {\n                this.resizeTexture(this.colorMap.size);\n            }\n\n            const buffer = new Uint8Array(this.capacity * 4);\n            let offset = 0;\n\n            for (const color of this.colorMap.keys()) {\n                const rgba = chroma.hex(color).rgba();\n                buffer[offset] = rgba[0];\n                ++offset;\n                buffer[offset] = rgba[1];\n                ++offset;\n                buffer[offset] = rgba[2];\n                ++offset;\n                buffer[offset] = Math.round(rgba[3] * 255); // alpha is always [0, 1] and we need it to be [0, 255]\n                ++offset;\n            }\n\n            this._texture.data(buffer);\n        }\n        this.dirty = false;\n    }\n\n    public registerColor(color: GraferInputColor): number {\n        const hex = chroma(color as any).hex(); // dumb chroma typings\n        if (!this.colorMap.has(hex)) {\n            this.colorMap.set(hex, this.colorMap.size);\n            this.dirty = true;\n        }\n        return this.colorMap.get(hex);\n    }\n\n    private resizeTexture(capacity: number): void {\n        if (this.capacity < capacity) {\n            const textureWidth = Math.pow(2, Math.ceil(Math.log2(Math.ceil(Math.sqrt(capacity)))));\n            const textureHeight = Math.pow(2, Math.ceil(Math.log2(Math.ceil(capacity / textureWidth))));\n            this.textureSize = vec2.fromValues(textureWidth, textureHeight);\n            if (this._texture) {\n                this._texture.resize(textureWidth, textureHeight);\n            } else {\n                this._texture = this.context.createTexture2D(textureWidth, textureHeight);\n            }\n        }\n    }\n}\n","export type RectObserverCallback = (rect: DOMRectReadOnly) => void;\n\nconst POLLING_RATE = 400; // ms\n\nexport default class RectObserver {\n    public elementTarget: HTMLElement;\n    public callback: RectObserverCallback;\n    public rect: DOMRectReadOnly;\n    private poll: ReturnType<typeof setInterval>;\n\n    constructor(callback: RectObserverCallback) {\n        this.callback = callback;\n    }\n\n    public observe(element: HTMLElement): void {\n        this.elementTarget = element;\n\n        this.elementTarget.addEventListener(\"mouseenter\", this.handleMouseEnter.bind(this), false);\n        this.elementTarget.addEventListener(\"mouseleave\", this.handleMouseLeave.bind(this), false);\n\n        this.rect = this.elementTarget.getBoundingClientRect();\n    }\n\n    public disconnect(): void {\n        clearInterval(this.poll);\n        this.elementTarget.removeEventListener(\"mouseenter\", this.handleMouseEnter.bind(this), false);\n        this.elementTarget.removeEventListener(\"mouseleave\", this.handleMouseLeave.bind(this), false);\n    }\n\n    private handleMouseEnter(): void {\n        this.pollElement();\n        this.poll = setInterval(this.pollElement.bind(this), POLLING_RATE);\n    }\n\n    private pollElement(): void {\n        const rect = this.elementTarget.getBoundingClientRect();\n        if(!this.rectEqual(this.rect, rect)) {\n            this.rect = rect;\n            this.callback(this.rect);\n        }\n    }\n\n    private handleMouseLeave(): void {\n        this.pollElement();\n        clearInterval(this.poll);\n    }\n\n    public rectEqual(prev: DOMRectReadOnly, curr: DOMRectReadOnly): boolean {\n        return prev.width === curr.width &&\n        prev.height === curr.height &&\n        prev.top === curr.top &&\n        prev.left === curr.left;\n    }\n}","import {PicoGL} from 'picogl';\nimport {GraferContext} from './GraferContext';\nimport {vec2, vec4} from 'gl-matrix';\nimport {RenderMode, RenderUniforms} from './Renderable';\nimport {Camera} from './Camera';\nimport {Graph} from '../graph/Graph';\nimport {MouseHandler} from '../UX/mouse/MouseHandler';\nimport {ColorRegistry} from './ColorRegistry';\nimport RectObserver from './RectObserver';\n\nexport class Viewport {\n    public readonly element: HTMLElement;\n    public readonly canvas: HTMLCanvasElement;\n    public readonly context: GraferContext;\n    public readonly mouseHandler: MouseHandler;\n    public readonly colorRegisrty: ColorRegistry;\n    public rect: DOMRectReadOnly;\n\n    public readonly size: vec2;\n    public readonly camera: Camera;\n\n    public graph: Graph;\n\n    private _clearColor: [number, number, number, number] = vec4.create() as [number, number, number, number];\n    public get clearColor(): vec4 {\n        return this._clearColor;\n    }\n    public set clearColor(value: vec4) {\n        vec4.copy(this._clearColor, value);\n        this.context.clearColor(...this._clearColor);\n    }\n\n    public get pixelRatio(): number {\n        return this.context.pixelRatio;\n    }\n\n    private animationFrameID: number = 0;\n    private timeoutID: number = 0;\n    private renderMode: RenderMode;\n    private boundDelayedRender: () => void = this.delayedRender.bind(this);\n\n    constructor(element: HTMLElement) {\n        const pixelRatio = window.devicePixelRatio;\n        this.element = element;\n\n        if (this.element instanceof HTMLCanvasElement) {\n            this.canvas = this.element;\n        } else {\n            this.canvas = document.createElement('canvas');\n            this.canvas.style.width = '100%';\n            this.canvas.style.height = '100%';\n            this.element.appendChild(this.canvas);\n        }\n\n        this.rect = this.canvas.getBoundingClientRect();\n        this.canvas.width = this.rect.width * pixelRatio;\n        this.canvas.height = this.rect.height * pixelRatio;\n\n        this.context = PicoGL.createApp(this.canvas, {\n            antialias: false,\n            premultipliedAlpha: false,\n            preserveDrawingBuffer: true,\n        }) as GraferContext;\n        this.clearColor = [0.141176471, 0.160784314, 0.2, 1.0];\n        // this.clearColor = [0.18, 0.204, 0.251, 1.0];\n        this.context.clearMask(PicoGL.COLOR_BUFFER_BIT | PicoGL.DEPTH_BUFFER_BIT);\n        this.context.enable(PicoGL.DEPTH_TEST);\n        this.context.depthFunc(PicoGL.LESS);\n        this.context.pixelRatio = pixelRatio;\n\n        this.mouseHandler = new MouseHandler(this.canvas, this.rect, this.pixelRatio);\n\n        this.size = vec2.fromValues(this.canvas.width, this.canvas.height);\n\n        this.camera = new Camera(this.size);\n\n        const resizeObserver = new RectObserver((rect): void => {\n            this.rect = rect;\n            this.context.resize(this.rect.width * this.pixelRatio, this.rect.height * this.pixelRatio);\n            vec2.set(this.size, this.canvas.width, this.canvas.height);\n            this.camera.viewportSize = this.size;\n            this.mouseHandler.resize(this.rect, this.pixelRatio);\n            this.graph.resize(this.context);\n            this.render();\n        });\n        resizeObserver.observe(this.canvas);\n\n        this.colorRegisrty = new ColorRegistry(this.context);\n    }\n\n    public resetContextFlags(): void {\n        this.context.blendFuncSeparate(PicoGL.SRC_ALPHA, PicoGL.ONE_MINUS_SRC_ALPHA, PicoGL.ONE, PicoGL.ONE);\n        this.context.defaultDrawFramebuffer();\n        this.context.defaultReadFramebuffer();\n        this.context.disable(PicoGL.BLEND);\n        this.context.enable(PicoGL.DEPTH_TEST);\n        this.context.depthFunc(PicoGL.LESS);\n        this.context.depthMask(true);\n        this.context.depthRange(0.0, 1.0);\n        this.context.clearColor(...this._clearColor);\n    }\n\n    public render(): void {\n        if (!this.animationFrameID) {\n            this.renderMode = RenderMode.DRAFT;\n            if (this.timeoutID) {\n                clearTimeout(this.timeoutID);\n                this.timeoutID = 0;\n            }\n            this.animationFrameID = requestAnimationFrame(() => this._render());\n        }\n    }\n\n    private scheduleRender(delay: number): void {\n        if (this.timeoutID) {\n            clearTimeout(this.timeoutID);\n        }\n        this.timeoutID = window.setTimeout(this.boundDelayedRender, delay);\n    }\n\n    private delayedRender(): void {\n        this.timeoutID = 0;\n        this._render();\n    }\n\n    private _render(): void {\n        const uniforms: RenderUniforms = {\n            uViewMatrix: this.camera.viewMatrix,\n            uSceneMatrix: this.graph.matrix,\n            uProjectionMatrix: this.camera.projectionMatrix,\n            uViewportSize: this.size,\n            uPixelRatio: this.pixelRatio,\n            uClearColor: this._clearColor,\n            uColorPalette: this.colorRegisrty.texture,\n            uRenderMode: this.renderMode,\n        };\n\n        this.resetContextFlags();\n        this.context.clear();\n        if (this.graph && this.graph.enabled) {\n            this.graph.render(this.context, this.renderMode, uniforms);\n\n            switch (this.renderMode) {\n                case RenderMode.DRAFT:\n                    uniforms.uRenderMode = RenderMode.PICKING;\n                    this.graph.render(this.context, RenderMode.PICKING, uniforms);\n                    this.renderMode = RenderMode.MEDIUM;\n                    this.scheduleRender(85);\n                    break;\n\n                case RenderMode.MEDIUM:\n                    this.renderMode = RenderMode.HIGH_PASS_1;\n                    this.scheduleRender(120);\n                    break;\n\n                case RenderMode.HIGH_PASS_1:\n                    uniforms.uRenderMode = RenderMode.HIGH_PASS_2;\n                    this.graph.render(this.context, RenderMode.HIGH_PASS_2, uniforms);\n                    break;\n            }\n        }\n        this.animationFrameID = 0;\n    }\n}\n","import {\n    GL_TYPE_GETTER,\n    GL_TYPE_SETTER,\n    GL_TYPE_SIZE,\n    GLDataTypes,\n    GLDataTypesInfo,\n    glDataTypesInfo,\n} from '../renderer/Renderable';\nimport {App, VertexBuffer} from 'picogl';\n\nexport const kDataMappingFlatten = Symbol('graffer:data::mapping::flatten::key');\nconst kDataEntryNeedsFlatten = Symbol('graffer:data::tools::needs::flatten');\n\nexport type DataMapping<T, R> = {\n    (entry: T, i: number, fi?: number, fl?: number): R,\n    [kDataMappingFlatten]?: (entry: {[key in keyof T]: R}, i: number, l: number) => R,\n}\n\nexport type DataMappings<T> = {\n    [key in keyof Required<T>]: DataMapping<T, T[key]>;\n};\n\nexport interface DataShader {\n    vs: string;\n    varyings: string[];\n}\n\nexport type PackDataCB<T> = (i: number, entry: T) => void;\n\nexport function* dataIterator<T>(data: unknown[], mappings: DataMappings<T>): Generator<[number, T]> {\n    const keys = Reflect.ownKeys(mappings);\n\n    for (let i = 0, n = data.length; i < n; ++i) {\n        const entry = {};\n        for (const key of keys) {\n            if (mappings[key] !== null) {\n                entry[key] = mappings[key](data[i], i);\n            }\n        }\n        yield [i, entry as T];\n    }\n}\n\nexport function extractData<T>(data: unknown[], mappings: DataMappings<T>): T[] {\n    const result: T[] = [];\n    for (const [, entry] of dataIterator(data, mappings)) {\n        result.push(entry);\n    }\n    return result;\n}\n\nexport function concatenateData<T>(data: unknown[][], mappings: DataMappings<T>): T[] {\n    const result = [];\n    for (let i = 0, n = data.length; i < n; ++i) {\n        for (const [, entry] of dataIterator(data[i], mappings)) {\n            result.push(entry);\n        }\n    }\n    return result;\n}\n\nexport function computeDataTypes<T>(types: GLDataTypes<T>, mappings: DataMappings<T>): GLDataTypes<T> {\n    const keys = Object.keys(types);\n    const result: GLDataTypes<T> = {};\n    for (let i = 0, n = keys.length; i < n; ++i) {\n        if (keys[i] in mappings && mappings[keys[i]] !== null) {\n            result[keys[i]] = types[keys[i]];\n        }\n    }\n    return result;\n}\n\nexport function writeValueToDataView(view: DataView, value: number | number[], type: GLenum | GLenum[], offset: number): number {\n    if (Array.isArray(value)) {\n        let writeOffset = 0;\n        for (let i = 0, n = value.length; i < n; ++i) {\n            GL_TYPE_SETTER[type[i]](view, offset + writeOffset, value[i]);\n            writeOffset += GL_TYPE_SIZE[type[i]];\n        }\n        return writeOffset;\n    }\n\n    GL_TYPE_SETTER[type as GLenum](view, offset, value);\n    return GL_TYPE_SIZE[type as GLenum];\n}\n\nexport function flattenEntry<T>(entry: T, types: GLDataTypes<T>, typesInfo: GLDataTypesInfo, mappings: DataMappings<T>, view: DataView, offset: number): number {\n    // build an internal mappings object to flatten the values\n    const flatMappings = {};\n    let flattenLength = 0;\n    for (let i = 0, n = typesInfo.keys.length; i < n; ++i) {\n        const key = typesInfo.keys[i];\n        if (entry[kDataEntryNeedsFlatten].has(key)) {\n            flatMappings[key] = mappings[key][kDataMappingFlatten] ?? ((entry, i): unknown => entry[key][i]);\n            // all values to flatten should have the same length\n            flattenLength = entry[key].length;\n        } else {\n            flatMappings[key] = mappings[key][kDataMappingFlatten] ?? ((entry): unknown => entry[key]);\n        }\n    }\n\n    let flatOffset = 0;\n    for (let i = 0; i < flattenLength; ++i) {\n        for (let ii = 0, n = typesInfo.keys.length; ii < n; ++ii) {\n            const key = typesInfo.keys[ii];\n            flatOffset += writeValueToDataView(view, flatMappings[key](entry, i, flattenLength), types[key], offset + flatOffset);\n        }\n    }\n\n    return flatOffset;\n}\n\nexport function packData<T>(data: unknown[], mappings: DataMappings<T>, types: GLDataTypes<T>, potLength: boolean, cb?: PackDataCB<T> | PackDataCB<T>[]): ArrayBuffer {\n    const typesInfo = glDataTypesInfo(computeDataTypes(types, mappings));\n    const entries = [];\n    let dataLength = 0;\n\n    const cb1 = Array.isArray(cb) ? cb[0] : cb;\n    const cb2 = Array.isArray(cb) ? cb[1] : null;\n\n    // go over the data once to compute the data byte length. Sorry future Dario :(\n    // TODO: Investigate a better way to do this in one iteration\n    for (const [index, entry] of dataIterator(data, mappings)) {\n        let entryLength = 1;\n        for (let i = 0, n = typesInfo.keys.length; i < n; ++i) {\n            const value = entry[typesInfo.keys[i]];\n            if (Array.isArray(value) && (!Array.isArray(types[typesInfo.keys[i]]) || mappings[typesInfo.keys[i]][kDataMappingFlatten])) {\n                if (!entry[kDataEntryNeedsFlatten]) {\n                    entry[kDataEntryNeedsFlatten] = new Set<string>();\n                }\n                entry[kDataEntryNeedsFlatten].add(typesInfo.keys[i]);\n                entryLength = Math.max(entryLength, value.length);\n            }\n        }\n\n        entries.push(entry);\n        dataLength += entryLength;\n\n        // call the first callback with the entries\n        if (cb1) {\n            cb1(index, entry);\n        }\n    }\n\n    dataLength = potLength ? Math.pow(2 , Math.ceil(Math.log2(dataLength))) : dataLength;\n\n    const buffer = new ArrayBuffer(typesInfo.stride * dataLength);\n    const view = new DataView(buffer);\n\n    let offset = 0;\n    for (let i = 0, n = entries.length; i < n; ++i) {\n        const entry = entries[i];\n\n        // give the caller a last chance to modify the entries\n        if (cb2) {\n            cb2(i, entry);\n        }\n\n        if (entry[kDataEntryNeedsFlatten]) {\n            offset += flattenEntry(entry, types, typesInfo, mappings, view, offset);\n        } else {\n            for (let i = 0, n = typesInfo.keys.length; i < n; ++i) {\n                offset += writeValueToDataView(view, entry[typesInfo.keys[i]], types[typesInfo.keys[i]], offset);\n            }\n        }\n    }\n\n    return buffer;\n}\n\nexport function printDataGL<T>(context: App, vbo: VertexBuffer, count: number, types: GLDataTypes<T>): void {\n    const gl = context.gl as WebGL2RenderingContext;\n    const typesInfo = glDataTypesInfo(types);\n    const result = new ArrayBuffer(typesInfo.stride * count);\n    const view = new DataView(result);\n    gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo.buffer);\n    gl.getBufferSubData(gl.ARRAY_BUFFER, 0, view);\n\n    let off = 0;\n    for (let i = 0; i < count; ++i) {\n        for (let ii = 0, nn = typesInfo.keys.length; ii < nn; ++ii) {\n            const type = Array.isArray(types[typesInfo.keys[ii]]) ? types[typesInfo.keys[ii]] : [types[typesInfo.keys[ii]]];\n            const values = [];\n            for (let iii = 0, nnn = type.length; iii < nnn; ++iii) {\n                values.push(GL_TYPE_GETTER[type[iii]](view, off));\n                off += GL_TYPE_SIZE[type[iii]];\n            }\n            // eslint-disable-next-line\n            console.log(`ELEMENT[${i}] ATTR[${ii}]: ${values}`);\n        }\n    }\n}\n","import PicoGL, {App, Texture} from 'picogl';\nimport testVS from './shaders/GraphPoints.test.vs.glsl';\nimport testFS from './shaders/noop.fs.glsl';\nimport {GLDataTypes} from '../renderer/Renderable';\nimport {DataMappings, concatenateData, packData, printDataGL} from './DataTools';\nimport {vec3} from 'gl-matrix';\n\nexport interface PointData {\n    id?: number | string;\n    x: number;\n    y: number;\n    z?: number;\n    radius?: number;\n}\n\nexport type PointDataMappings = DataMappings<PointData>;\n\nconst kDefaultMappings: PointDataMappings = {\n    id: (entry: any, i) => 'id' in entry ? entry.id : i,\n    x: (entry: any) => entry.x,\n    y: (entry: any) => entry.y,\n    z: (entry: any) => 'z' in entry ? entry.z : 0.0,\n    radius: (entry: any) => 'radius' in entry ? entry.radius : 0.0,\n};\n\nconst kGLTypes: GLDataTypes<PointData> = {\n    x: PicoGL.FLOAT,\n    y: PicoGL.FLOAT,\n    z: PicoGL.FLOAT,\n    radius: PicoGL.FLOAT,\n};\n\nexport class GraphPoints {\n    public static createGraphFromNodes<R extends GraphPoints>(context: App, nodes: unknown[][], mappings: Partial<PointDataMappings> = {}): R {\n        let pointIndex = 0;\n        const dataMappings: PointDataMappings = Object.assign({}, kDefaultMappings, {\n            id: () => pointIndex++,\n        }, mappings);\n\n        const points = concatenateData(nodes, dataMappings);\n        return <R>(new this(context, points));\n    }\n\n    private _dataTexture: Texture;\n    public get dataTexture(): Texture {\n        return this._dataTexture;\n    }\n\n    private _dataBuffer: ArrayBuffer;\n    public get dataBuffer(): ArrayBuffer {\n        return this._dataBuffer;\n    }\n\n    private _dataView: DataView;\n    public get dataView(): DataView {\n        return this._dataView;\n    }\n\n    private map: Map<number | string, number>;\n\n    public bb: { min: vec3, max: vec3 };\n    public bbCorner: vec3;\n    public bbCornerLength: number;\n\n    constructor(context: App, data: PointData[]);\n    constructor(context: App, data: unknown[], mappings: Partial<PointDataMappings>);\n    constructor(context: App, data: unknown[], mappings: Partial<PointDataMappings> = {}) {\n        this.map = new Map();\n        this.bb = {\n            min: vec3.fromValues(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number. MAX_SAFE_INTEGER),\n            max: vec3.fromValues(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER),\n        };\n        this.bbCorner = vec3.fromValues(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\n\n        const dataMappings: PointDataMappings = Object.assign({}, kDefaultMappings, mappings);\n        this._dataBuffer = packData(data, dataMappings, kGLTypes, true, (i, entry) => {\n            this.map.set(entry.id, i);\n\n            this.bb.min[0] = Math.min(this.bb.min[0], entry.x);\n            this.bb.min[1] = Math.min(this.bb.min[1], entry.y);\n            this.bb.min[2] = Math.min(this.bb.min[2], entry.z);\n\n            this.bb.max[0] = Math.max(this.bb.max[0], entry.x);\n            this.bb.max[1] = Math.max(this.bb.max[1], entry.y);\n            this.bb.max[2] = Math.max(this.bb.max[2], entry.z);\n\n            this.bbCorner[0] = Math.max(this.bbCorner[0], Math.abs(entry.x));\n            this.bbCorner[1] = Math.max(this.bbCorner[1], Math.abs(entry.y));\n            this.bbCorner[2] = Math.max(this.bbCorner[2], Math.abs(entry.z));\n        });\n        this._dataView = new DataView(this._dataBuffer);\n\n        this.bbCornerLength = vec3.length(this.bbCorner);\n\n        // calculate the smallest texture rectangle with POT sides, is this optimization needed? - probably not\n        const textureWidth = Math.pow(2 , Math.ceil(Math.log2(Math.ceil(Math.sqrt(data.length)))));\n        const textureHeight = Math.pow(2 , Math.ceil(Math.log2(Math.ceil(data.length / textureWidth))));\n        this._dataTexture = context.createTexture2D(textureWidth, textureHeight, {\n            internalFormat: PicoGL.RGBA32F,\n        });\n\n        const float32 = new Float32Array(this._dataBuffer);\n        this._dataTexture.data(float32);\n\n        // this.testFeedback(context);\n    }\n\n    public destroy(): void {\n        this._dataTexture.delete();\n        this.map.clear();\n\n        this._dataTexture = null;\n        this._dataBuffer = null;\n        this.map = null;\n    }\n\n    public getPointIndex(id: number | string): number {\n        return this.map.get(id);\n    }\n\n    private testFeedback(context: App): void {\n        const program = context.createProgram(testVS, testFS, { transformFeedbackVaryings: [ 'vPosition', 'vRadius', 'vYolo' ], transformFeedbackMode: PicoGL.INTERLEAVED_ATTRIBS });\n        const pointsTarget = context.createVertexBuffer(PicoGL.FLOAT, 4, 40);\n        const pointsIndices = context.createVertexBuffer(PicoGL.UNSIGNED_BYTE, 1, new Uint8Array([\n            0,\n            1,\n            2,\n            3,\n            4,\n            5,\n        ]));\n\n        const transformFeedback = context.createTransformFeedback().feedbackBuffer(0, pointsTarget);\n        const vertexArray = context.createVertexArray().vertexAttributeBuffer(0, pointsIndices);\n\n        const drawCall = context.createDrawCall(program, vertexArray).transformFeedback(transformFeedback);\n        drawCall.primitive(PicoGL.POINTS);\n        drawCall.texture('uDataTexture', this._dataTexture);\n        context.enable(PicoGL.RASTERIZER_DISCARD);\n        drawCall.draw();\n        context.disable(PicoGL.RASTERIZER_DISCARD);\n\n        printDataGL(context, pointsTarget, 6, {\n            position: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n            radius: PicoGL.FLOAT,\n            yolo: PicoGL.FLOAT,\n        });\n    }\n}\n","import {Renderable, RenderMode, RenderUniforms} from '../renderer/Renderable';\nimport {App, PicoGL} from 'picogl';\nimport {mat4, quat, vec3} from 'gl-matrix';\nimport {Layer} from './Layer';\nimport {GraphPoints, PointData, PointDataMappings} from '../data/GraphPoints';\nimport {PickingManager} from '../UX/picking/PickingManager';\n\nexport class Graph extends GraphPoints implements Renderable {\n    public picking: PickingManager;\n    public enabled: boolean = true;\n\n    private readonly _matrix: mat4;\n    public get matrix(): mat4 {\n        mat4.fromRotationTranslation(this._matrix, this._rotation, this._translation);\n        return this._matrix;\n    }\n\n    private readonly _layers: Layer[];\n    public get layers(): Layer[] {\n        return this._layers;\n    }\n\n    private readonly _rotation: quat;\n    public get rotation(): quat {\n        return this._rotation;\n    }\n\n    private readonly _translation: vec3;\n    public get translation(): vec3 {\n        return this._translation;\n    }\n\n    constructor(context: App, data: PointData[]);\n    constructor(context: App, data: unknown[], mappings: Partial<PointDataMappings>);\n    constructor(context: App, data: unknown[], mappings: Partial<PointDataMappings> = {}) {\n        super(context, data, mappings);\n        this._layers = [];\n        this._rotation = quat.create();\n        this._translation = vec3.create();\n        this._matrix = mat4.create();\n    }\n\n    public render(context:App, mode: RenderMode, uniforms: RenderUniforms): void {\n        if (mode === RenderMode.PICKING && this.picking && this.picking.enabled) {\n            this.picking.offscreenBuffer.prepareContext(context);\n        }\n\n        // render labels\n        for (let i = 0, n = this._layers.length; i < n; ++i) {\n            if (this._layers[i].enabled) {\n                context.blendFuncSeparate(PicoGL.SRC_ALPHA, PicoGL.ONE_MINUS_SRC_ALPHA, PicoGL.ONE, PicoGL.ONE);\n                this._layers[i].renderLabels(context, mode, uniforms);\n            }\n        }\n\n        // render nodes\n        for (let i = 0, n = this._layers.length; i < n; ++i) {\n            if (this._layers[i].enabled) {\n                context.blendFuncSeparate(PicoGL.SRC_ALPHA, PicoGL.ONE_MINUS_SRC_ALPHA, PicoGL.ONE, PicoGL.ONE);\n                this._layers[i].renderNodes(context, mode, uniforms);\n            }\n        }\n\n        // render edges\n        for (let i = 0, n = this._layers.length; i < n; ++i) {\n            if (this._layers[i].enabled) {\n                context.blendFuncSeparate(PicoGL.SRC_ALPHA, PicoGL.ONE_MINUS_SRC_ALPHA, PicoGL.ONE, PicoGL.ONE);\n                this._layers[i].renderEdges(context, mode, uniforms);\n            }\n        }\n\n        // if (this.picking) {\n        //     this.picking.offscreenBuffer.blitToScreen(context);\n        // }\n    }\n\n    public resize(context: App): void {\n        if (this.picking) {\n            this.picking.offscreenBuffer.resize(context);\n        }\n    }\n\n    public rotate(rotation: quat): void {\n        quat.mul(this._rotation, rotation, this._rotation);\n    }\n\n    public addLayer(layer: Layer): void {\n        this._layers.push(layer);\n    }\n\n    public addLayerAt(layer: Layer, index: number): void {\n        if (index >= 0 && index <= this._layers.length) {\n            this._layers.splice(index, 0, layer);\n        }\n    }\n\n    public removeLayer(layer: Layer): void {\n        const i = this._layers.indexOf(layer);\n        if (i !== -1) {\n            this._layers.splice(i, 1);\n        }\n    }\n\n    public removeLayerAt(index: number) : void {\n        if (index >= 0 && index < this._layers.length) {\n            this._layers.splice(index, 1);\n        }\n    }\n}\n","import {GraphPoints} from './GraphPoints';\nimport {App, DrawCall, PicoGL, Program, Texture, TransformFeedback, VertexArray, VertexBuffer} from 'picogl';\nimport {computeDataTypes, DataMappings, DataShader, packData, PackDataCB} from './DataTools';\nimport {configureVAO, GenericUniforms, GLDataTypes, glDataTypesInfo, setDrawCallUniforms} from '../renderer/Renderable';\nimport noopFS from './shaders/noop.fs.glsl';\nimport {GraferContext} from '../renderer/GraferContext';\n\nexport abstract class PointsReader<T_SRC, T_TGT> {\n    private dataDrawCall: DrawCall;\n    private dataProgram: Program;\n    private dataBuffer: ArrayBuffer;\n    private dataStride: number;\n    private dataView: DataView;\n\n    protected points: GraphPoints;\n\n    protected sourceVBO: VertexBuffer;\n    protected sourceVAO: VertexArray;\n\n    protected targetVBO: VertexBuffer;\n    protected targetTFO: TransformFeedback;\n\n    protected get dataTexture(): Texture {\n        return this.points.dataTexture;\n    }\n\n    protected constructor(context: GraferContext, points: GraphPoints, data: unknown[], mappings: Partial<DataMappings<T_SRC>>);\n    protected constructor(...args: any[]); // TypeScript is weird some times!\n    protected constructor(...args: any[]) {\n        this.initialize(...args);\n    }\n\n    protected initialize(...args: any[]): void;\n    protected initialize(context: GraferContext, points: GraphPoints, data: unknown[], mappings: Partial<DataMappings<T_SRC>>): void {\n        this.points = points;\n        this.ingestData(context, data, mappings);\n        this.initializeTargetBuffers(context, this.dataBuffer.byteLength / this.dataStride);\n        this.initializeDataDrawCall(context);\n    }\n\n    protected ingestData(context: App, data: unknown[], mappings: Partial<DataMappings<T_SRC>>): void {\n        // compute the data mappings for this instance\n        const dataMappings: DataMappings<T_SRC> = this.computeMappings(mappings);\n\n        // get the GL data types for this instance\n        const types = computeDataTypes(this.getGLSourceTypes(), dataMappings);\n\n        this.dataBuffer = packData(data, dataMappings, types, false, this.packDataCB());\n        this.dataView = new DataView(this.dataBuffer);\n\n        // initialize the data WebGL objects\n        const typesInfo = glDataTypesInfo(types);\n        this.dataStride = typesInfo.stride;\n        this.sourceVBO = context.createInterleavedBuffer(this.dataStride, this.dataView);\n        this.sourceVAO = context.createVertexArray();\n\n        configureVAO(this.sourceVAO, this.sourceVBO, types, typesInfo);\n    }\n\n    protected initializeTargetBuffers(context: App, dataLength: number): void {\n        const targetTypes = this.getGLTargetTypes();\n        const stride = glDataTypesInfo(targetTypes).stride;\n\n        this.targetVBO = context.createInterleavedBuffer(stride, dataLength * stride);\n        this.targetTFO = context.createTransformFeedback().feedbackBuffer(0, this.targetVBO);\n    }\n\n    protected initializeDataDrawCall(context: App): void {\n        const dataShader = this.getDataShader();\n\n        this.dataProgram = context.createProgram(dataShader.vs, noopFS, {\n            transformFeedbackVaryings: dataShader.varyings,\n            transformFeedbackMode: PicoGL.INTERLEAVED_ATTRIBS,\n        });\n\n        this.dataDrawCall = context.createDrawCall(this.dataProgram, this.sourceVAO).transformFeedback(this.targetTFO);\n        this.dataDrawCall.primitive(PicoGL.POINTS);\n    }\n\n    public compute(context: App, uniforms: GenericUniforms): void {\n        setDrawCallUniforms(this.dataDrawCall, uniforms);\n\n        context.enable(PicoGL.RASTERIZER_DISCARD);\n        this.dataDrawCall.draw();\n        context.disable(PicoGL.RASTERIZER_DISCARD);\n    }\n\n    protected configureTargetVAO(vao: VertexArray, attrIndex: number = 1): void {\n        const types = this.getGLTargetTypes();\n        const typesInfo = glDataTypesInfo(types);\n        configureVAO(vao, this.targetVBO, types, typesInfo, attrIndex, true);\n    }\n\n    protected packDataCB(): PackDataCB<T_SRC> | PackDataCB<T_SRC>[] {\n        return (): null => null;\n    }\n\n    protected abstract computeMappings(mappings: Partial<DataMappings<T_SRC>>): DataMappings<T_SRC>;\n    protected abstract getGLSourceTypes(): GLDataTypes<T_SRC>;\n    protected abstract getGLTargetTypes(): GLDataTypes<T_TGT>;\n    protected abstract getDataShader(): DataShader;\n}\n","import {PointsReader} from '../data/PointsReader';\nimport {GenericUniforms, Renderable, RenderMode, RenderUniforms} from '../renderer/Renderable';\nimport {App} from 'picogl';\nimport {GraphPoints} from '../data/GraphPoints';\nimport {DataMappings} from '../data/DataTools';\nimport {PickingManager} from '../UX/picking/PickingManager';\nimport {GraphRenderable} from './GraphRenderable';\nimport {EventEmitter} from '@dekkai/event-emitter/build/lib/EventEmitter';\nimport {GraferContext} from '../renderer/GraferContext';\n\nconst PointsReaderEmitter = EventEmitter.mixin(PointsReader);\nexport abstract class LayerRenderable<T_SRC, T_TGT> extends PointsReaderEmitter<T_SRC, T_TGT> implements Renderable, GraphRenderable {\n    public static get defaultMappings(): DataMappings<any> {\n        return undefined;\n    }\n\n    public enabled: boolean = true;\n    public nearDepth: number = 0.0;\n    public farDepth: number = 1.0;\n    public picking: boolean;\n    public abstract render(context: App, mode: RenderMode, uniforms: RenderUniforms): void;\n\n    protected pickingManager: PickingManager;\n    protected localUniforms: GenericUniforms;\n\n    protected constructor(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<T_SRC>>,\n        pickingManager: PickingManager,\n    );\n    protected constructor(...args: any[]);\n    protected constructor(...args: any[]) {\n        super(...args);\n    }\n\n    protected initialize(...args: any[]): void;\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<T_SRC>>,\n        pickingManager: PickingManager\n    ): void {\n        this.pickingManager = pickingManager;\n        this.picking = true;\n        super.initialize(context, points, data, mappings);\n    }\n\n    public abstract destroy(): void;\n}\n","import PicoGL, {App} from 'picogl';\nimport {LayerRenderable} from '../LayerRenderable';\nimport {DataMappings, PackDataCB} from '../../data/DataTools';\nimport {GLDataTypes} from '../../renderer/Renderable';\nimport {GraferInputColor} from '../../renderer/ColorRegistry';\n\nexport interface BasicNodeData {\n    id?: number | string;\n    point: number | string;\n    color?: GraferInputColor;\n    radius?: number;\n}\n\nexport const kBasicNodeMappings: DataMappings<BasicNodeData> = {\n    id: (entry: any, i) => 'id' in entry ? entry.id : i,\n    point: (entry: any, i) => 'point' in entry ? entry.point : i,\n    color: (entry: any) => 'color' in entry ? entry.color : 0, // first registered color\n    radius: null, // inherit the radius from the vertex data\n};\n\nexport const kBasicNodeDataTypes: GLDataTypes<BasicNodeData> = {\n    point: PicoGL.UNSIGNED_INT,\n    color: PicoGL.UNSIGNED_INT,\n    radius: PicoGL.FLOAT, // optional at the end\n};\n\nexport abstract class Nodes<T_SRC extends BasicNodeData, T_TGT> extends LayerRenderable<T_SRC, T_TGT> {\n    public static get defaultMappings(): DataMappings<BasicNodeData> {\n        return kBasicNodeMappings;\n    }\n\n    protected map: Map<number | string, number | string>;\n    protected idArray: (number | string)[];\n\n    public get constraintSize(): boolean {\n        return this.localUniforms.uConstraintSize as boolean;\n    }\n    public set constraintSize(value: boolean) {\n        this.localUniforms.uConstraintSize = value;\n    }\n\n    public get minSize(): number {\n        return this.localUniforms.uMinSize as number;\n    }\n    public set minSize(value: number) {\n        this.localUniforms.uMinSize = value;\n    }\n\n    public get maxSize(): number {\n        return this.localUniforms.uMaxSize as number;\n    }\n    public set maxSize(value: number) {\n        this.localUniforms.uMaxSize = value;\n    }\n\n    public get pixelSizing(): boolean {\n        return this.localUniforms.uPixelSizing as boolean;\n    }\n    public set pixelSizing(value: boolean) {\n        this.localUniforms.uPixelSizing = value;\n    }\n\n    public get billboard(): boolean {\n        return this.localUniforms.uBillboard as boolean;\n    }\n    public set billboard(value: boolean) {\n        this.localUniforms.uBillboard = value;\n    }\n\n    protected initialize(...args: any[]): void {\n        this.localUniforms = {\n            uConstraintSize: true,\n            uMinSize: 1.0,\n            uMaxSize: 4.0,\n            uPixelSizing: false,\n            uBillboard: true,\n        };\n        super.initialize(...args);\n    }\n\n    protected computeMappings(mappings: Partial<DataMappings<T_SRC>>): DataMappings<T_SRC> {\n        const nodesMappings = Object.assign({}, kBasicNodeMappings, mappings);\n\n        // patches the mappings to get the points index from their IDs\n        const pointMapping = nodesMappings.point;\n        nodesMappings.point = (entry, i): number => {\n            return this.points.getPointIndex(pointMapping(entry, i));\n        };\n\n        return nodesMappings as DataMappings<T_SRC>;\n    }\n\n    protected ingestData(context: App, data: unknown[], mappings: Partial<DataMappings<T_SRC>>): void {\n        this.map = new Map();\n        this.idArray = [];\n        super.ingestData(context, data, mappings);\n    }\n\n    protected packDataCB(): PackDataCB<T_SRC> | PackDataCB<T_SRC>[] {\n        return (i, entry): void => {\n            this.map.set(entry.id, entry.point);\n            this.idArray.push(entry.id);\n        };\n    }\n\n    public getEntryPointID(id: number | string):  number | string {\n        return this.map.get(id);\n    }\n}\n","import {vec4} from \"gl-matrix\";\nimport {App, Framebuffer, PicoGL, Renderbuffer, Texture} from 'picogl';\n\nexport class OffscreenBuffer {\n    private _clearColor: [number, number, number, number] = vec4.create() as [number, number, number, number];\n    public get clearColor(): vec4 {\n        return this._clearColor;\n    }\n    public set clearColor(value: vec4) {\n        vec4.copy(this._clearColor, value);\n    }\n\n    private context: App;\n    private colorTarget: Texture;\n    private depthTarget: Renderbuffer;\n    private frameBuffer: Framebuffer;\n\n    constructor(context: App) {\n        this.context = context;\n        this.resize(context);\n    }\n\n    public resize(context: App): void {\n        if (this.frameBuffer) {\n            this.frameBuffer.delete();\n        }\n\n        if (this.colorTarget) {\n            this.colorTarget.delete();\n        }\n\n        if (this.depthTarget) {\n            this.depthTarget.delete();\n        }\n\n        this.colorTarget = context.createTexture2D(context.width, context.height);\n        this.depthTarget = context.createRenderbuffer(context.width, context.height, PicoGL.DEPTH_COMPONENT16);\n        this.frameBuffer = context.createFramebuffer()\n            .colorTarget(0, this.colorTarget)\n            .depthTarget(this.depthTarget);\n    }\n\n    public prepareContext(context: App): void {\n        context.depthMask(true);\n        context.readFramebuffer(this.frameBuffer);\n        context.drawFramebuffer(this.frameBuffer)\n            .clearMask(PicoGL.COLOR_BUFFER_BIT | PicoGL.DEPTH_BUFFER_BIT)\n            .clearColor(...this._clearColor)\n            .clear()\n            .depthMask(true);\n    }\n\n    public blitToBuffer(context: App, target: OffscreenBuffer, mask: GLenum = PicoGL.COLOR_BUFFER_BIT): void {\n        context.drawFramebuffer(target.frameBuffer);\n        context.readFramebuffer(this.frameBuffer);\n        context.blitFramebuffer(mask);\n    }\n\n    public blitToScreen(context: App, mask: GLenum = PicoGL.COLOR_BUFFER_BIT): void {\n        context.defaultDrawFramebuffer();\n        context.readFramebuffer(this.frameBuffer);\n        context.blitFramebuffer(mask);\n    }\n\n    public readPixel(x: number, y: number, buffer: Uint8Array): void {\n        this.context.defaultDrawFramebuffer()\n            .readFramebuffer(this.frameBuffer)\n            .readPixel(x, y, buffer);\n    }\n}\n","import {EventEmitter} from '@dekkai/event-emitter/build/lib/EventEmitter';\nimport {OffscreenBuffer} from '../../renderer/OffscreenBuffer';\nimport {UXModule} from '../UXModule';\nimport {App} from 'picogl';\nimport {\n    MouseCallback,\n    MouseHandler,\n    MouseMoveHandler,\n    MouseState,\n} from '../mouse/MouseHandler';\n\nconst kEvents  = {\n    hoverOn: Symbol('grafer_hover_on'),\n    hoverOff: Symbol('grafer_hover_off'),\n    click: Symbol('grafer_click'),\n};\nObject.freeze(kEvents);\n\nexport type PickingEventsMap = { [K in keyof typeof kEvents]: ReturnType<() => { readonly 0: unique symbol }[0]> };\nexport type PickingEvent = PickingEventsMap[keyof PickingEventsMap];\n\nexport interface PickingIndexRange {\n    start: number;\n    end: number;\n}\n\nexport interface PickingColors {\n    colors: Uint8Array;\n    ranges: PickingIndexRange[];\n    map: Map<number, number>;\n}\n\nexport class PickingManager extends EventEmitter.mixin(UXModule) {\n    public static get events(): PickingEventsMap {\n        return kEvents as PickingEventsMap;\n    }\n\n    private _offscreenBuffer: OffscreenBuffer;\n    public get offscreenBuffer(): OffscreenBuffer {\n        return this._offscreenBuffer;\n    }\n\n    private mouseHandler: MouseHandler;\n    private boundMouseHandler: MouseMoveHandler = this.handleMouse.bind(this);\n\n    private colorBuffer: ArrayBuffer = new ArrayBuffer(4);\n    private colorBufferUint8: Uint8Array = new Uint8Array(this.colorBuffer);\n    private colorBufferView: DataView = new DataView(this.colorBuffer);\n    private colorHoverID: number = 0;\n\n    private availableIndices: PickingIndexRange[];\n\n    constructor(context: App, mouseHandler: MouseHandler, enabled: boolean = true) {\n        super();\n        this._offscreenBuffer = new OffscreenBuffer(context);\n        this.mouseHandler = mouseHandler;\n        this.availableIndices = [{\n            start: 0,\n            end: 0xefffffff,\n        }];\n\n        this.enabled = enabled;\n    }\n\n    public on(type: PickingEvent, callback: MouseCallback): void {\n        super.on(type, callback);\n    }\n\n    public off(type: PickingEvent, callback: MouseCallback): void {\n        super.off(type, callback);\n    }\n\n    public allocatePickingColors(count: number): PickingColors {\n        const colors = new Uint8Array(count * 4);\n        const ranges: PickingIndexRange[] = [];\n        const map: Map<number, number> = new Map();\n\n        let offset = 0;\n        let left = count;\n        for (let i = 0, n = this.availableIndices.length; i < n && left > 0; ++i) {\n            const availableRange = this.availableIndices[i];\n            const rangeLength = availableRange.end - availableRange.start;\n            if (rangeLength > left) {\n                const range = { start: availableRange.start, end: availableRange.start + left };\n                offset = this.pickingColorsForIndices(colors, offset, range);\n                this.mapPickingColorIDs(map, count - left, range);\n                ranges.push(range);\n\n                availableRange.start += left;\n                left = 0;\n            } else {\n                offset = this.pickingColorsForIndices(colors, offset, availableRange);\n                this.mapPickingColorIDs(map, count - left, availableRange);\n                ranges.push(availableRange);\n                left -= rangeLength;\n                this.availableIndices.splice(i--, 1);\n            }\n        }\n\n        return {\n            colors,\n            ranges,\n            map,\n        };\n    }\n\n    public deallocatePickingColors(colors: PickingColors): void {\n        for (let i = 0, n = colors.ranges.length; i < n; ++i) {\n            this.deallocatePickingRange(colors.ranges[i]);\n        }\n        colors.colors = new Uint8Array([]);\n        colors.ranges.length = 0;\n        colors.map.clear();\n    }\n\n    protected hookEvents(): void {\n        this.mouseHandler.on(MouseHandler.events.move, this.boundMouseHandler);\n        this.mouseHandler.on(MouseHandler.events.click, this.boundMouseHandler);\n    }\n\n    protected unhookEvents(): void {\n        this.mouseHandler.off(MouseHandler.events.move, this.boundMouseHandler);\n        this.mouseHandler.off(MouseHandler.events.click, this.boundMouseHandler);\n    }\n\n    private handleMouse(event: symbol, state: MouseState): void {\n        const glCoords = state.glCoords;\n        this._offscreenBuffer.readPixel(glCoords[0], glCoords[1], this.colorBufferUint8);\n        const colorID = this.colorBufferView.getUint32(0);\n\n        switch (event) {\n            case MouseHandler.events.move:\n                if (colorID !== this.colorHoverID) {\n                    if (this.colorHoverID !== 0) {\n                        this.emit(kEvents.hoverOff, this.colorHoverID >> 1);\n                    }\n                    this.colorHoverID = colorID;\n                    if (this.colorHoverID !== 0) {\n                        this.emit(kEvents.hoverOn, this.colorHoverID >> 1);\n                    }\n                }\n                break;\n\n            case MouseHandler.events.click:\n                if (colorID !== 0) {\n                    this.emit(kEvents.click, colorID >> 1);\n                }\n                break;\n        }\n    }\n\n    private deallocatePickingRange(range: PickingIndexRange): void {\n        for (let i = 0, n = this.availableIndices.length; i < n; ++i) {\n            const availableRange = this.availableIndices[i];\n            if (availableRange.start > range.start) {\n                if (availableRange.start === range.end) {\n                    availableRange.start = range.start;\n                } else {\n                    this.availableIndices.splice(i, 0, {\n                        start: range.start,\n                        end: range.end,\n                    });\n                }\n                break;\n            }\n        }\n    }\n\n    private mapPickingColorIDs(out: Map<number, number>, idStart: number, range: PickingIndexRange): void {\n        for (let i = 0, n = range.end - range.start; i < n; ++i) {\n            out.set(range.start + i, idStart + i);\n        }\n    }\n\n    private pickingColorsForIndices(out:Uint8Array, offset:number, range: PickingIndexRange): number {\n        for (let i = range.start; i < range.end; ++i) {\n            const color = this.pickingColorForNumber(i);\n            out[offset++] = color[0];\n            out[offset++] = color[1];\n            out[offset++] = color[2];\n            out[offset++] = color[3];\n        }\n        return offset;\n    }\n\n    private pickingColorForNumber(num: number): Uint8Array {\n        // offset the number so alpha is never 0\n        const pickingNumber = (num << 1) | 1;\n        const buffer = new ArrayBuffer(4);\n        const view = new DataView(buffer);\n        view.setUint32(0, pickingNumber);\n        return new Uint8Array(buffer);\n    }\n}\n","import nodeVS from './Circle.vs.glsl';\nimport nodeFS from './Circle.fs.glsl';\nimport dataVS from './Circle.data.vs.glsl';\nimport pickingFS from './Circle.picking.fs.glsl';\n\nimport {BasicNodeData, kBasicNodeDataTypes, Nodes} from '../Nodes';\nimport {App, DrawCall, PicoGL, Program, VertexArray, VertexBuffer} from 'picogl';\nimport {GraphPoints} from '../../../data/GraphPoints';\nimport {DataMappings, DataShader} from '../../../data/DataTools';\nimport {PickingColors, PickingEvent, PickingManager} from '../../../UX/picking/PickingManager';\nimport {MouseCallback} from '../../../UX/mouse/MouseHandler';\nimport {\n    GLDataTypes,\n    RenderableShaders,\n    RenderMode,\n    RenderUniforms,\n    setDrawCallUniforms,\n} from '../../../renderer/Renderable';\nimport {GraferContext} from '../../../renderer/GraferContext';\n\nexport const kGLCircleNodeTypes = {\n    // TODO: maybe use points indices?\n    position: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    // TODO: maybe skip and use vertex indices when point radius is used.\n    radius: PicoGL.FLOAT,\n    // TODO: Create a color texture and use indices here.\n    color: PicoGL.UNSIGNED_INT,\n} as const;\nexport type GLCircleNodeTypes = typeof kGLCircleNodeTypes;\n\nexport class Circle extends Nodes<BasicNodeData, GLCircleNodeTypes> {\n    protected program: Program;\n    protected drawCall: DrawCall;\n\n    protected pickingProgram: Program;\n    protected pickingDrawCall: DrawCall;\n    protected pickingColors: PickingColors;\n    protected pickingVBO: VertexBuffer;\n    protected pickingHandler: MouseCallback;\n\n    protected verticesVBO: VertexBuffer;\n    protected nodesVAO: VertexArray;\n\n    protected usePointRadius: boolean;\n\n    constructor(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<BasicNodeData>>,\n        pickingManager: PickingManager\n    );\n    constructor(...args: any[]);\n    constructor(...args: any[]) {\n        super(...args);\n    }\n\n    protected initialize(...args: any[]): void;\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<BasicNodeData>>,\n        pickingManager: PickingManager\n    ): void {\n        super.initialize(context, points, data, mappings, pickingManager);\n        this.verticesVBO = context.createVertexBuffer(PicoGL.FLOAT, 2, new Float32Array([\n            -1, -1,\n            1, -1,\n            -1, 1,\n            1, 1,\n        ]));\n\n        this.pickingHandler = this.handlePickingEvent.bind(this);\n        this.pickingColors = this.pickingManager.allocatePickingColors(data.length);\n        this.pickingVBO = context.createVertexBuffer(PicoGL.UNSIGNED_BYTE, 4, this.pickingColors.colors);\n\n        this.nodesVAO = context.createVertexArray().vertexAttributeBuffer(0, this.verticesVBO);\n        this.configureTargetVAO(this.nodesVAO);\n        this.nodesVAO.instanceAttributeBuffer(4, this.pickingVBO);\n\n        const shaders = this.getDrawShaders();\n        this.program = context.createProgram(shaders.vs, shaders.fs);\n        this.drawCall = context.createDrawCall(this.program, this.nodesVAO).primitive(PicoGL.TRIANGLE_STRIP);\n\n        const pickingShaders = this.getPickingShaders();\n        this.pickingProgram = context.createProgram(pickingShaders.vs, pickingShaders.fs);\n        this.pickingDrawCall = context.createDrawCall(this.pickingProgram, this.nodesVAO).primitive(PicoGL.TRIANGLE_STRIP);\n\n        const computedMappings = this.computeMappings(mappings);\n        this.usePointRadius = computedMappings.radius === null;\n\n        this.compute(context, {\n            uGraphPoints: this.dataTexture,\n            uUsePointRadius: this.usePointRadius,\n        });\n\n        this.pickingManager.on(PickingManager.events.hoverOn, this.pickingHandler);\n        this.pickingManager.on(PickingManager.events.hoverOff, this.pickingHandler);\n        this.pickingManager.on(PickingManager.events.click, this.pickingHandler);\n\n        // printDataGL(context, this.targetVBO, data.length, kGLCircleNodeTypes);\n    }\n\n    public destroy(): void {\n        // TODO: Implement destroy method\n    }\n\n    public render(context:App, mode: RenderMode, uniforms: RenderUniforms): void {\n        context.disable(PicoGL.BLEND);\n\n        context.depthRange(this.nearDepth, this.farDepth);\n        context.depthMask(true);\n\n        switch (mode) {\n            case RenderMode.PICKING:\n                if (this.picking) {\n                    setDrawCallUniforms(this.pickingDrawCall, uniforms);\n                    setDrawCallUniforms(this.pickingDrawCall, this.localUniforms);\n                    this.pickingDrawCall.uniform('uPicking', true);\n                    this.pickingDrawCall.draw();\n                }\n                break;\n\n            case RenderMode.HIGH_PASS_2:\n                context.depthMask(false);\n                context.enable(PicoGL.BLEND);\n                /* fallthrough */\n            default:\n                setDrawCallUniforms(this.drawCall, uniforms);\n                setDrawCallUniforms(this.drawCall, this.localUniforms);\n                this.drawCall.uniform('uPicking', false);\n                this.drawCall.draw();\n                break;\n        }\n    }\n\n    protected getDrawShaders(): RenderableShaders {\n        return {\n            vs: nodeVS,\n            fs: nodeFS,\n        };\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        return {\n            vs: nodeVS,\n            fs: pickingFS,\n        };\n    }\n\n    protected getGLSourceTypes(): GLDataTypes<BasicNodeData> {\n        return kBasicNodeDataTypes;\n    }\n\n    protected getGLTargetTypes(): GLDataTypes<GLCircleNodeTypes> {\n        return kGLCircleNodeTypes;\n    }\n\n    protected getDataShader(): DataShader {\n        return {\n            vs: dataVS,\n            varyings: [ 'vPosition', 'vRadius', 'vColor' ],\n        };\n    }\n\n    protected handlePickingEvent(event: PickingEvent, colorID: number): void {\n        if (this.picking && this.pickingColors.map.has(colorID)) {\n            const id = this.idArray[this.pickingColors.map.get(colorID)];\n            this.emit(event, id);\n        }\n    }\n}\n","import nodeFS from './Ring.fs.glsl';\nimport {Circle} from '../circle/Circle';\nimport {RenderableShaders} from '../../../renderer/Renderable';\n\nexport class Ring extends Circle {\n    protected getDrawShaders(): RenderableShaders {\n        const shaders = super.getDrawShaders();\n        shaders.fs = nodeFS;\n        return shaders;\n    }\n}\n","import nodeFS from './Triangle.fs.glsl';\nimport pickingFS from './Triangle.picking.fs.glsl';\nimport {Circle} from '../circle/Circle';\nimport {RenderableShaders} from '../../../renderer/Renderable';\n\nexport class Triangle extends Circle {\n    protected getDrawShaders(): RenderableShaders {\n        const shaders = super.getDrawShaders();\n        shaders.fs = nodeFS;\n        return shaders;\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        const shaders = super.getPickingShaders();\n        shaders.fs = pickingFS;\n        return shaders;\n    }\n}\n","import nodeFS from './Pentagon.fs.glsl';\nimport pickingFS from './Pentagon.picking.fs.glsl';\nimport {Circle} from '../circle/Circle';\nimport {RenderableShaders} from '../../../renderer/Renderable';\n\nexport class Pentagon extends Circle {\n    protected getDrawShaders(): RenderableShaders {\n        const shaders = super.getDrawShaders();\n        shaders.fs = nodeFS;\n        return shaders;\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        const shaders = super.getPickingShaders();\n        shaders.fs = pickingFS;\n        return shaders;\n    }\n}\n","import nodeFS from './Octagon.fs.glsl';\nimport pickingFS from './Octagon.picking.fs.glsl';\nimport {Circle} from '../circle/Circle';\nimport {RenderableShaders} from '../../../renderer/Renderable';\n\nexport class Octagon extends Circle {\n    protected getDrawShaders(): RenderableShaders {\n        const shaders = super.getDrawShaders();\n        shaders.fs = nodeFS;\n        return shaders;\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        const shaders = super.getPickingShaders();\n        shaders.fs = pickingFS;\n        return shaders;\n    }\n}\n","import nodeFS from './Star.fs.glsl';\nimport pickingFS from './Star.picking.fs.glsl';\nimport {Circle} from '../circle/Circle';\nimport {RenderableShaders} from '../../../renderer/Renderable';\nimport {GraphPoints} from '../../../data/GraphPoints';\nimport {DataMappings} from '../../../data/DataTools';\nimport {BasicNodeData} from '../Nodes';\nimport {PickingManager} from '../../../UX/picking/PickingManager';\nimport {GraferContext} from '../../../renderer/GraferContext';\n\nexport class Star extends Circle {\n    public get sides(): number {\n        return this.localUniforms.uSides as number;\n    }\n    public set sides(value: number) {\n        this.localUniforms.uSides = value;\n    }\n\n    public get angleDivisor(): number {\n        return this.localUniforms.uAngleDivisor as number;\n    }\n    public set angleDivisor(value: number) {\n        this.localUniforms.uAngleDivisor = value;\n    }\n\n    constructor(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<BasicNodeData>>,\n        pickingManager: PickingManager,\n        sides: number = 5,\n        angleDivisor: number = 3.0\n    ) {\n        super(context, points, data, mappings, pickingManager, sides, angleDivisor);\n    }\n\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<BasicNodeData>>,\n        pickingManager: PickingManager,\n        sides: number,\n        angleDivisor: number\n    ): void {\n        super.initialize(context, points, data, mappings, pickingManager);\n        this.localUniforms.uSides = sides;\n        this.localUniforms.uAngleDivisor = angleDivisor;\n    }\n\n    protected getDrawShaders(): RenderableShaders {\n        const shaders = super.getDrawShaders();\n        shaders.fs = nodeFS;\n        return shaders;\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        const shaders = super.getPickingShaders();\n        shaders.fs = pickingFS;\n        return shaders;\n    }\n}\n","import nodeFS from './Cross.fs.glsl';\nimport pickingFS from './Cross.picking.fs.glsl';\nimport {Circle} from '../circle/Circle';\nimport {RenderableShaders} from '../../../renderer/Renderable';\n\nexport class Cross extends Circle {\n    protected getDrawShaders(): RenderableShaders {\n        const shaders = super.getDrawShaders();\n        shaders.fs = nodeFS;\n        return shaders;\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        const shaders = super.getPickingShaders();\n        shaders.fs = pickingFS;\n        return shaders;\n    }\n}\n","import nodeFS from './Plus.fs.glsl';\nimport pickingFS from './Plus.picking.fs.glsl';\nimport {Circle} from '../circle/Circle';\nimport {RenderableShaders} from '../../../renderer/Renderable';\n\nexport class Plus extends Circle {\n    protected getDrawShaders(): RenderableShaders {\n        const shaders = super.getDrawShaders();\n        shaders.fs = nodeFS;\n        return shaders;\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        const shaders = super.getPickingShaders();\n        shaders.fs = pickingFS;\n        return shaders;\n    }\n}\n","export * from './circle/Circle';\nexport * from './ring/Ring';\nexport * from './triangle/Triangle';\nexport * from './pentagon/Pentagon';\nexport * from './octagon/Octagon';\nexport * from './star/Star';\nexport * from './cross/Cross';\nexport * from './plus/Plus';\n\nimport {Circle} from './circle/Circle';\nimport {Ring} from './ring/Ring';\nimport {Triangle} from './triangle/Triangle';\nimport {Pentagon} from './pentagon/Pentagon';\nimport {Octagon} from './octagon/Octagon';\nimport {Star} from './star/Star';\nimport {Cross} from './cross/Cross';\nimport {Plus} from './plus/Plus';\n\nconst types = {\n    Circle,\n    Ring,\n    Triangle,\n    Pentagon,\n    Octagon,\n    Star,\n    Cross,\n    Plus,\n};\n\nexport {types};\n\nexport * from './Nodes';\n","import PicoGL from 'picogl';\nimport {LayerRenderable} from '../LayerRenderable';\nimport {GraphPoints} from '../../data/GraphPoints';\nimport {DataMappings} from '../../data/DataTools';\nimport {PickingManager} from '../../UX/picking/PickingManager';\nimport {GLDataTypes} from '../../renderer/Renderable';\nimport {GraferInputColor} from '../../renderer/ColorRegistry';\nimport {GraferContext} from '../../renderer/GraferContext';\n\nexport interface BasicEdgeData {\n    id?: number | string;\n    source: number;\n    target: number;\n    sourceColor?: GraferInputColor,\n    targetColor?: GraferInputColor,\n}\n\nexport const kBasicEdgeMappings: DataMappings<BasicEdgeData> = {\n    id: (entry: any, i) => 'id' in entry ? entry.id : i,\n    source: (entry: any) => entry.source,\n    target: (entry: any) => entry.target,\n    sourceColor: (entry: any) => 'sourceColor' in entry ? entry.sourceColor : 0, // first registered color\n    targetColor: (entry: any) => 'targetColor' in entry ? entry.targetColor : 0, // first registered color\n};\n\nexport const kBasicEdgeDataTypes: GLDataTypes<BasicEdgeData> = {\n    source: PicoGL.UNSIGNED_INT,\n    target: PicoGL.UNSIGNED_INT,\n    sourceColor: PicoGL.UNSIGNED_INT,\n    targetColor: PicoGL.UNSIGNED_INT,\n};\n\nexport abstract class Edges<T_SRC extends BasicEdgeData, T_TGT> extends LayerRenderable<T_SRC, T_TGT> {\n    public static get defaultMappings(): DataMappings<BasicEdgeData> {\n        return kBasicEdgeMappings;\n    }\n\n    public get alpha(): number {\n        return this.localUniforms.uAlpha as number;\n    }\n    public set alpha(value: number) {\n        this.localUniforms.uAlpha = value;\n    }\n\n    public get lineWidth(): number {\n        return this.localUniforms.uLineWidth as number;\n    }\n    public set lineWidth(value: number) {\n        this.localUniforms.uLineWidth = value;\n    }\n\n    protected initialize(...args: any[]): void {\n        this.localUniforms = {\n            uAlpha: 1.0,\n            uLineWidth: 1.5,\n        };\n        super.initialize(...args);\n    }\n\n    constructor(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<T_SRC>>,\n        pickingManager: PickingManager,\n    );\n    constructor(...args: any[]);\n    constructor(...args: any[]) {\n        super(...args);\n    }\n\n    protected computeMappings(mappings: Partial<DataMappings<T_SRC>>): DataMappings<T_SRC> {\n        const edgesMappings = Object.assign({}, kBasicEdgeMappings, mappings);\n\n        // patches the mappings to get the points index from their IDs\n        const sourceMapping = edgesMappings.source;\n        edgesMappings.source = (entry, i): number => {\n            return this.points.getPointIndex(sourceMapping(entry, i));\n        };\n\n        const targetMapping = edgesMappings.target;\n        edgesMappings.target = (entry, i): number => {\n            return this.points.getPointIndex(targetMapping(entry, i));\n        };\n\n        return edgesMappings as DataMappings<T_SRC>;\n    }\n}\n","import edgeVS from './Straight.vs.glsl';\nimport edgeFS from './Straight.fs.glsl';\nimport dataVS from './Straight.data.vs.glsl';\nimport {App, DrawCall, PicoGL, Program, VertexArray, VertexBuffer} from 'picogl';\nimport {BasicEdgeData, Edges, kBasicEdgeDataTypes} from '../Edges';\nimport {GraphPoints} from '../../../data/GraphPoints';\nimport {DataMappings, DataShader} from '../../../data/DataTools';\nimport {PickingManager} from '../../../UX/picking/PickingManager';\nimport {GraferContext} from '../../../renderer/GraferContext';\nimport {\n    GLDataTypes,\n    RenderableShaders,\n    RenderMode,\n    RenderUniforms,\n    setDrawCallUniforms,\n} from '../../../renderer/Renderable';\n\nexport const kGLStraightEdgeTypes = {\n    source: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    target: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    sourceColor: PicoGL.UNSIGNED_INT,\n    targetColor: PicoGL.UNSIGNED_INT,\n} as const;\nexport type GLStraightEdgeTypes = typeof kGLStraightEdgeTypes;\n\nexport class Straight extends Edges<BasicEdgeData, GLStraightEdgeTypes> {\n    protected program: Program;\n    protected drawCall: DrawCall;\n\n    protected verticesVBO: VertexBuffer;\n    protected edgesVAO: VertexArray;\n\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<BasicEdgeData>>,\n        pickingManager: PickingManager\n    ): void {\n        super.initialize(context, points, data, mappings, pickingManager);\n\n        this.verticesVBO = context.createVertexBuffer(PicoGL.FLOAT, 2, new Float32Array([\n            -1, 0,\n            1, 0,\n            -1, 1,\n            1, 1,\n        ]));\n\n        this.edgesVAO = context.createVertexArray().vertexAttributeBuffer(0, this.verticesVBO);\n        this.configureTargetVAO(this.edgesVAO);\n\n        const shaders = this.getDrawShaders();\n        this.program = context.createProgram(shaders.vs, shaders.fs);\n        this.drawCall = context.createDrawCall(this.program, this.edgesVAO).primitive(PicoGL.TRIANGLE_STRIP);\n\n        this.compute(context, {\n            uGraphPoints: this.dataTexture,\n        });\n\n        // printDataGL(context, this.targetVBO, data.length, kGLStraightEdgeTypes);\n    }\n\n    public destroy(): void {\n        // TODO: Implement destroy method\n    }\n\n    public render(context:App, mode: RenderMode, uniforms: RenderUniforms): void {\n        context.enable(PicoGL.BLEND);\n\n        context.depthRange(this.nearDepth, this.farDepth);\n        context.depthMask(false);\n\n        setDrawCallUniforms(this.drawCall, uniforms);\n        setDrawCallUniforms(this.drawCall, this.localUniforms);\n\n        switch (mode) {\n            case RenderMode.PICKING:\n                // this.pickingDrawCall.draw();\n                break;\n\n            case RenderMode.HIGH_PASS_2:\n                break;\n\n            default:\n                this.drawCall.draw();\n                break;\n        }\n    }\n\n    protected getDrawShaders(): RenderableShaders {\n        return {\n            vs: edgeVS,\n            fs: edgeFS,\n        };\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        return {\n            vs: edgeVS,\n            fs: null, // pickingFS,\n        };\n    }\n\n    protected getGLSourceTypes(): GLDataTypes<BasicEdgeData> {\n        return kBasicEdgeDataTypes;\n    }\n\n    protected getGLTargetTypes(): GLDataTypes<GLStraightEdgeTypes> {\n        return kGLStraightEdgeTypes;\n    }\n\n    protected getDataShader(): DataShader {\n        return {\n            vs: dataVS,\n            varyings: [ 'vSource', 'vTarget', 'vSourceColor', 'vTargetColor' ],\n        };\n    }\n}\n","import edgeVS from './Dashed.vs.glsl';\nimport edgeFS from './Dashed.fs.glsl';\n\nimport {Straight} from '../straight/Straight';\nimport {RenderableShaders} from '../../../renderer/Renderable';\nimport {GraphPoints} from '../../../data/GraphPoints';\nimport {DataMappings} from '../../../data/DataTools';\nimport {BasicEdgeData} from '../Edges';\nimport {PickingManager} from '../../../UX/picking/PickingManager';\nimport {GraferContext} from '../../../renderer/GraferContext';\n\nexport class Dashed extends Straight {\n    public get dashLength(): number {\n        return this.localUniforms.uDashLength as number;\n    }\n    public set dashLength(value: number) {\n        this.localUniforms.uDashLength = value;\n    }\n\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<BasicEdgeData>>,\n        pickingManager: PickingManager\n    ): void {\n        super.initialize(context, points, data, mappings, pickingManager);\n        this.localUniforms.uDashLength = 10.0;\n    }\n\n    protected getDrawShaders(): RenderableShaders {\n        return {\n            vs: edgeVS,\n            fs: edgeFS,\n        };\n    }\n}\n","import edgeVS from './Gravity.vs.glsl';\nimport edgeFS from './Gravity.fs.glsl';\nimport dataVS from './Gravity.data.vs.glsl';\n\nimport {App, DrawCall, PicoGL, Program, VertexArray, VertexBuffer} from 'picogl';\nimport {BasicEdgeData, Edges, kBasicEdgeDataTypes} from '../Edges';\nimport {GraphPoints} from '../../../data/GraphPoints';\nimport {DataMappings, DataShader} from '../../../data/DataTools';\nimport {PickingManager} from '../../../UX/picking/PickingManager';\nimport {GLStraightEdgeTypes, kGLStraightEdgeTypes} from '../straight/Straight';\nimport {\n    GLDataTypes,\n    RenderableShaders,\n    RenderMode,\n    RenderUniforms,\n    setDrawCallUniforms,\n} from '../../../renderer/Renderable';\nimport {GraferContext} from '../../../renderer/GraferContext';\n\nexport const kGLGravityEdgeTypes = {\n    source: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    target: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    sourceColor: PicoGL.UNSIGNED_INT,\n    targetColor: PicoGL.UNSIGNED_INT,\n} as const;\nexport type GLGravityEdgeTypes = typeof kGLGravityEdgeTypes;\n\nexport class Gravity extends Edges<BasicEdgeData, GLGravityEdgeTypes> {\n    protected program: Program;\n    protected drawCall: DrawCall;\n\n    protected verticesVBO: VertexBuffer;\n    protected edgesVAO: VertexArray;\n\n    public get gravity(): number {\n        return this.localUniforms.uGravity as number;\n    }\n    public set gravity(value: number) {\n        this.localUniforms.uGravity = value;\n    }\n\n    constructor(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<BasicEdgeData>>,\n        pickingManager: PickingManager,\n        segments: number = 16\n    ) {\n        super(context, points, data, mappings, pickingManager, segments);\n    }\n\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<BasicEdgeData>>,\n        pickingManager: PickingManager,\n        segments: number\n    ): void {\n        super.initialize(context, points, data, mappings, pickingManager);\n\n        this.localUniforms.uGravity = -0.2;\n\n        const segmentVertices = [];\n        for (let i = 0; i <= segments; ++i) {\n            segmentVertices.push(i / segments, 0);\n        }\n\n        this.verticesVBO = context.createVertexBuffer(PicoGL.FLOAT, 2, new Float32Array(segmentVertices));\n        this.edgesVAO = context.createVertexArray().vertexAttributeBuffer(0, this.verticesVBO);\n        this.configureTargetVAO(this.edgesVAO);\n\n        const shaders = this.getDrawShaders();\n        this.program = context.createProgram(shaders.vs, shaders.fs);\n        this.drawCall = context.createDrawCall(this.program, this.edgesVAO).primitive(PicoGL.LINE_STRIP);\n\n        this.compute(context, {\n            uGraphPoints: this.dataTexture,\n        });\n\n        // printDataGL(context, this.targetVBO, data.length, kGLStraightEdgeTypes);\n    }\n\n    public destroy(): void {\n        // TODO: Implement destroy method\n    }\n\n    public render(context:App, mode: RenderMode, uniforms: RenderUniforms): void {\n        setDrawCallUniforms(this.drawCall, uniforms);\n        setDrawCallUniforms(this.drawCall, this.localUniforms);\n\n        context.enable(PicoGL.BLEND);\n\n        context.depthRange(this.nearDepth, this.farDepth);\n        context.depthMask(false);\n\n        switch (mode) {\n            case RenderMode.PICKING:\n                // this.pickingDrawCall.draw();\n                break;\n\n            case RenderMode.HIGH_PASS_2:\n                break;\n\n            default:\n                this.drawCall.draw();\n                break;\n        }\n    }\n\n    protected getDrawShaders(): RenderableShaders {\n        return {\n            vs: edgeVS,\n            fs: edgeFS,\n        };\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        return {\n            vs: edgeVS,\n            fs: null, // pickingFS,\n        };\n    }\n\n    protected getGLSourceTypes(): GLDataTypes<BasicEdgeData> {\n        return kBasicEdgeDataTypes;\n    }\n\n    protected getGLTargetTypes(): GLDataTypes<GLStraightEdgeTypes> {\n        return kGLStraightEdgeTypes;\n    }\n\n    protected getDataShader(): DataShader {\n        return {\n            vs: dataVS,\n            varyings: [ 'vSource', 'vTarget', 'vSourceColor', 'vTargetColor' ],\n        };\n    }\n}\n","import edgeVS from './CurvedPath.vs.glsl';\nimport edgeFS from './CurvedPath.fs.glsl';\nimport dataVS from './CurvedPath.data.vs.glsl';\n\nimport {App, DrawCall, PicoGL, Program, VertexArray, VertexBuffer} from 'picogl';\nimport {GraferInputColor} from '../../../renderer/ColorRegistry';\nimport {DataMappings, DataShader, kDataMappingFlatten} from '../../../data/DataTools';\nimport {\n    GLDataTypes,\n    RenderableShaders,\n    RenderMode,\n    RenderUniforms,\n    setDrawCallUniforms,\n} from '../../../renderer/Renderable';\nimport {Edges} from '../Edges';\nimport {GraphPoints} from '../../../data/GraphPoints';\nimport {PickingManager} from '../../../UX/picking/PickingManager';\nimport {GraferContext} from '../../../renderer/GraferContext';\n\nexport interface PathEdgeData {\n    id?: number | string;\n    source: number;\n    target: number;\n    control: number | number[];\n    sourceColor?: GraferInputColor,\n    targetColor?: GraferInputColor,\n}\n\nexport const kPathEdgeMappings: DataMappings<PathEdgeData> = {\n    id: (entry: PathEdgeData, i) => 'id' in entry ? entry.id : i,\n    source: (entry: PathEdgeData) => entry.source,\n    target: (entry: PathEdgeData) => entry.target,\n    control: (entry: PathEdgeData) => entry.control,\n    sourceColor: (entry: PathEdgeData) => 'sourceColor' in entry ? entry.sourceColor : 0, // first registered color\n    targetColor: (entry: PathEdgeData) => 'targetColor' in entry ? entry.targetColor : 0, // first registered color\n};\n\nexport const kPathEdgeDataTypes: GLDataTypes<PathEdgeData> = {\n    source: PicoGL.UNSIGNED_INT,\n    target: PicoGL.UNSIGNED_INT,\n    control: [PicoGL.UNSIGNED_INT, PicoGL.UNSIGNED_INT, PicoGL.UNSIGNED_INT],\n    sourceColor: PicoGL.UNSIGNED_INT,\n    targetColor: PicoGL.UNSIGNED_INT,\n};\n\nexport const kGLPathEdgeTypes = {\n    source: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    target: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    control: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    sourceColor: PicoGL.UNSIGNED_INT,\n    targetColor: PicoGL.UNSIGNED_INT,\n    colorMix: [PicoGL.FLOAT, PicoGL.FLOAT],\n} as const;\nexport type GLPathEdgeTypes = typeof kGLPathEdgeTypes;\n\nexport class CurvedPath extends Edges<PathEdgeData, GLPathEdgeTypes> {\n    protected program: Program;\n    protected drawCall: DrawCall;\n\n    protected verticesVBO: VertexBuffer;\n    protected edgesVAO: VertexArray;\n\n    constructor(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<PathEdgeData>>,\n        pickingManager: PickingManager,\n        segments: number = 16\n    ) {\n        super(context, points, data, mappings, pickingManager, segments);\n    }\n\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<PathEdgeData>>,\n        pickingManager: PickingManager,\n        segments: number\n    ): void {\n        super.initialize(context, points, data, mappings, pickingManager);\n\n        const segmentVertices = [];\n        for (let i = 0; i <= segments; ++i) {\n            segmentVertices.push(\n                -1, i,\n                1, i\n            );\n        }\n\n        this.verticesVBO = context.createVertexBuffer(PicoGL.FLOAT, 2, new Float32Array(segmentVertices));\n        this.edgesVAO = context.createVertexArray().vertexAttributeBuffer(0, this.verticesVBO);\n        this.configureTargetVAO(this.edgesVAO);\n\n        const shaders = this.getDrawShaders();\n        this.program = context.createProgram(shaders.vs, shaders.fs);\n        this.drawCall = context.createDrawCall(this.program, this.edgesVAO).primitive(PicoGL.TRIANGLE_STRIP);\n\n        this.compute(context, {\n            uGraphPoints: this.dataTexture,\n        });\n\n        // printDataGL(context, this.targetVBO, data.length, kGLStraightEdgeTypes);\n\n        this.localUniforms.uSegments = segments;\n    }\n\n    public destroy(): void {\n        // TODO: Implement destroy method\n    }\n\n    public render(context:App, mode: RenderMode, uniforms: RenderUniforms): void {\n        setDrawCallUniforms(this.drawCall, uniforms);\n        setDrawCallUniforms(this.drawCall, this.localUniforms);\n\n        context.enable(PicoGL.BLEND);\n\n        context.depthRange(this.nearDepth, this.farDepth);\n        context.depthMask(false);\n\n        switch (mode) {\n            case RenderMode.PICKING:\n                // this.pickingDrawCall.draw();\n                break;\n\n            case RenderMode.HIGH_PASS_2:\n                break;\n\n            default:\n                context.blendFuncSeparate(PicoGL.SRC_ALPHA, PicoGL.ONE, PicoGL.ONE, PicoGL.ONE);\n                this.drawCall.draw();\n                break;\n        }\n    }\n\n    protected getDrawShaders(): RenderableShaders {\n        return {\n            vs: edgeVS,\n            fs: edgeFS,\n        };\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        return {\n            vs: edgeVS,\n            fs: null, // pickingFS,\n        };\n    }\n\n    protected getGLSourceTypes(): GLDataTypes<PathEdgeData> {\n        return kPathEdgeDataTypes;\n    }\n\n    protected getGLTargetTypes(): GLDataTypes<GLPathEdgeTypes> {\n        return kGLPathEdgeTypes;\n    }\n\n    protected getDataShader(): DataShader {\n        return {\n            vs: dataVS,\n            varyings: [ 'vSource', 'vTarget', 'vControl', 'vSourceColor', 'vTargetColor', 'vColorMix' ],\n        };\n    }\n\n    protected computeMappings(mappings: Partial<DataMappings<PathEdgeData>>): DataMappings<PathEdgeData> {\n        const edgesMappings = Object.assign({}, kPathEdgeMappings, super.computeMappings(mappings));\n\n        // patches the mappings to get the points index from their IDs and account for flattening\n        edgesMappings.control[kDataMappingFlatten] = (entry, i, l): number | number[] => {\n            return [this.points.getPointIndex(entry.control[i]), i, l];\n        };\n\n        edgesMappings.source[kDataMappingFlatten] = (entry, i, l): number => {\n            if (i === 0) {\n                return entry.source;\n            }\n            return edgesMappings.control[kDataMappingFlatten](entry, i - 1, l)[0] as number;\n        };\n\n        edgesMappings.target[kDataMappingFlatten] = (entry, i, l): number => {\n            if (i === l - 1) {\n                return entry.target;\n            }\n            return edgesMappings.control[kDataMappingFlatten](entry, i + 1, l)[0] as number;\n        };\n\n        return edgesMappings;\n    }\n}\n","import edgeVS from './ClusterBundle.vs.glsl';\nimport edgeFS from './ClusterBundle.fs.glsl';\nimport dataVS from './ClusterBundle.data.vs.glsl';\n\nimport {App, DrawCall, PicoGL, Program, VertexArray, VertexBuffer} from 'picogl';\nimport {GraferInputColor} from '../../../renderer/ColorRegistry';\nimport {DataMappings, DataShader, printDataGL} from '../../../data/DataTools';\nimport {\n    GLDataTypes,\n    RenderableShaders,\n    RenderMode,\n    RenderUniforms,\n    setDrawCallUniforms,\n} from '../../../renderer/Renderable';\nimport {Edges} from '../Edges';\nimport {GraphPoints} from '../../../data/GraphPoints';\nimport {PickingManager} from '../../../UX/picking/PickingManager';\nimport {GraferContext} from '../../../renderer/GraferContext';\n\nexport interface ClusterBundleEdgeData {\n    id?: number | string;\n    source: number;\n    target: number;\n    sourceCluster: number;\n    targetCluster: number;\n    sourceColor?: GraferInputColor,\n    targetColor?: GraferInputColor,\n}\n\nexport const kClusterBundleEdgeMappings: DataMappings<ClusterBundleEdgeData & { index: number[] }> = {\n    id: (entry: ClusterBundleEdgeData, i) => 'id' in entry ? entry.id : i,\n    source: (entry: ClusterBundleEdgeData) => entry.source,\n    target: (entry: ClusterBundleEdgeData) => entry.target,\n    sourceCluster: (entry: ClusterBundleEdgeData) => entry.sourceCluster,\n    targetCluster: (entry: ClusterBundleEdgeData) => entry.targetCluster,\n    sourceColor: (entry: ClusterBundleEdgeData) => 'sourceColor' in entry ? entry.sourceColor : 0, // first registered color\n    targetColor: (entry: ClusterBundleEdgeData) => 'targetColor' in entry ? entry.targetColor : 0, // first registered color\n    index: () => [0, 1, 2],\n};\n\nexport const kClusterBundleEdgeDataTypes: GLDataTypes<ClusterBundleEdgeData & { index: number[] }> = {\n    source: PicoGL.UNSIGNED_INT,\n    target: PicoGL.UNSIGNED_INT,\n    sourceCluster: PicoGL.UNSIGNED_INT,\n    targetCluster: PicoGL.UNSIGNED_INT,\n    sourceColor: PicoGL.UNSIGNED_INT,\n    targetColor: PicoGL.UNSIGNED_INT,\n    index: PicoGL.UNSIGNED_INT,\n};\n\nexport const kGLClusterBundleEdgeTypes = {\n    source: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    target: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    control: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    sourceColor: PicoGL.UNSIGNED_INT,\n    targetColor: PicoGL.UNSIGNED_INT,\n    colorMix: [PicoGL.FLOAT, PicoGL.FLOAT],\n} as const;\nexport type GLClusterBundleEdgeTypes = typeof kGLClusterBundleEdgeTypes;\n\nexport class ClusterBundle extends Edges<ClusterBundleEdgeData, GLClusterBundleEdgeTypes> {\n    protected program: Program;\n    protected drawCall: DrawCall;\n\n    protected verticesVBO: VertexBuffer;\n    protected edgesVAO: VertexArray;\n\n    constructor(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<ClusterBundleEdgeData>>,\n        pickingManager: PickingManager,\n        segments: number = 16\n    ) {\n        super(context, points, data, mappings, pickingManager, segments);\n    }\n\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<ClusterBundleEdgeData>>,\n        pickingManager: PickingManager,\n        segments: number\n    ): void {\n        super.initialize(context, points, data, mappings, pickingManager);\n\n        const segmentVertices = [];\n        for (let i = 0; i <= segments; ++i) {\n            segmentVertices.push(\n                -1, i,\n                1, i\n            );\n        }\n\n        this.verticesVBO = context.createVertexBuffer(PicoGL.FLOAT, 2, new Float32Array(segmentVertices));\n        this.edgesVAO = context.createVertexArray().vertexAttributeBuffer(0, this.verticesVBO);\n        this.configureTargetVAO(this.edgesVAO);\n\n        const shaders = this.getDrawShaders();\n        this.program = context.createProgram(shaders.vs, shaders.fs);\n        this.drawCall = context.createDrawCall(this.program, this.edgesVAO).primitive(PicoGL.TRIANGLE_STRIP);\n\n        this.compute(context, {\n            uGraphPoints: this.dataTexture,\n        });\n\n        // printDataGL(context, this.targetVBO, data.length, kGLClusterBundleEdgeTypes);\n\n        this.localUniforms.uSegments = segments;\n    }\n\n    public destroy(): void {\n        // TODO: Implement destroy method\n    }\n\n    public render(context:App, mode: RenderMode, uniforms: RenderUniforms): void {\n        setDrawCallUniforms(this.drawCall, uniforms);\n        setDrawCallUniforms(this.drawCall, this.localUniforms);\n\n        context.enable(PicoGL.BLEND);\n\n        context.depthRange(this.nearDepth, this.farDepth);\n        context.depthMask(false);\n\n        switch (mode) {\n            case RenderMode.PICKING:\n                // this.pickingDrawCall.draw();\n                break;\n\n            case RenderMode.HIGH_PASS_2:\n                break;\n\n            default:\n                this.drawCall.draw();\n                break;\n        }\n    }\n\n    protected getDrawShaders(): RenderableShaders {\n        return {\n            vs: edgeVS,\n            fs: edgeFS,\n        };\n    }\n\n    protected getPickingShaders(): RenderableShaders {\n        return {\n            vs: edgeVS,\n            fs: null, // pickingFS,\n        };\n    }\n\n    protected getGLSourceTypes(): GLDataTypes<ClusterBundleEdgeData> {\n        return kClusterBundleEdgeDataTypes;\n    }\n\n    protected getGLTargetTypes(): GLDataTypes<GLClusterBundleEdgeTypes> {\n        return kGLClusterBundleEdgeTypes;\n    }\n\n    protected getDataShader(): DataShader {\n        return {\n            vs: dataVS,\n            varyings: [ 'vSource', 'vTarget', 'vControl', 'vSourceColor', 'vTargetColor', 'vColorMix' ],\n        };\n    }\n\n    protected computeMappings(mappings: Partial<DataMappings<ClusterBundleEdgeData>>): DataMappings<ClusterBundleEdgeData> {\n        const edgesMappings = Object.assign({}, kClusterBundleEdgeMappings, super.computeMappings(mappings));\n\n        // patches the mappings to get the points index from their IDs\n        const sourceClusterMapping = edgesMappings.sourceCluster;\n        edgesMappings.sourceCluster = (entry, i): number => {\n            return this.points.getPointIndex(sourceClusterMapping(entry, i));\n        };\n\n        const targetClusterMapping = edgesMappings.targetCluster;\n        edgesMappings.targetCluster = (entry, i): number => {\n            return this.points.getPointIndex(targetClusterMapping(entry, i));\n        };\n\n        return edgesMappings as DataMappings<ClusterBundleEdgeData>;\n    }\n}\n","export * from './straight/Straight';\nexport * from './dashed/Dashed';\nexport * from './gravity/Gravity';\nexport * from './path/CurvedPath';\nexport * from './bundle/ClusterBundle';\n\nimport {Straight} from './straight/Straight';\nimport {Dashed} from './dashed/Dashed';\nimport {Gravity} from './gravity/Gravity';\nimport {CurvedPath} from './path/CurvedPath';\nimport {ClusterBundle} from './bundle/ClusterBundle';\n\nexport const types = {\n    Straight,\n    Dashed,\n    Gravity,\n    CurvedPath,\n    ClusterBundle,\n};\n\nexport* from './Edges';\n","import {dataIterator, DataMappings, packData, printDataGL} from '../../data/DataTools';\nimport {GraferContext} from '../../renderer/GraferContext';\nimport potpack from 'potpack';\nimport {GLDataTypes} from '../../renderer/Renderable';\nimport PicoGL, {App, Texture} from 'picogl';\nimport testVS from './shaders/LabelAtlas.test.vs.glsl';\nimport testFS from '../../data/shaders/noop.fs.glsl';\n\nconst kImageMargin = 2;\nconst INF = 1e20;\n\nexport interface LabelData {\n    id?: number | string;\n    label: string | ImageData;\n    font?: string;\n    fontSize?: number;\n    padding?: number | [number, number];\n    background?: boolean;\n}\n\nexport const kLabelMappings: DataMappings<LabelData> = {\n    id: (entry: LabelData, i) => 'id' in entry ? entry.id : i,\n    label: (entry: LabelData, i) => 'label' in entry ? entry.label : `${i}`,\n    font: (entry: LabelData) => 'font' in entry ? entry.font : 'monospace',\n    fontSize: (entry: LabelData) => 'fontSize' in entry ? entry.fontSize : 18,\n    padding: (entry: LabelData) => 'padding' in entry ? entry.padding : [8, 5],\n    background: (entry: LabelData) => 'background' in entry ? entry.background : false,\n};\n\nexport const kLabelBoxDataMappings: DataMappings<{ box: [number, number, number, number] }> = {\n    box: (entry: any) => [ entry.x, entry.y, entry.w, entry.h ],\n};\n\nexport const kLabelBoxDataTypes: GLDataTypes<typeof kLabelBoxDataMappings> = {\n    box: [PicoGL.UNSIGNED_SHORT, PicoGL.UNSIGNED_SHORT, PicoGL.UNSIGNED_SHORT, PicoGL.UNSIGNED_SHORT],\n};\n\nexport class LabelAtlas {\n    public readonly labelPixelRatio: number;\n    public readonly labelMap: Map<number | string, number>;\n\n    private _dataTexture: Texture;\n    public get dataTexture(): Texture {\n        return this._dataTexture;\n    }\n\n    private _labelsTexture: Texture;\n    public get labelsTexture(): Texture {\n        return this._labelsTexture;\n    }\n\n    constructor(context: GraferContext, data: unknown[], mappings: Partial<DataMappings<LabelData>>) {\n        this.labelPixelRatio = window.devicePixelRatio;\n        this.labelMap = new Map();\n\n        if (data.length) {\n            this.processData(context, data, Object.assign({}, kLabelMappings, mappings));\n        } else {\n            this._dataTexture = context.createTexture2D(1, 1);\n            this._labelsTexture = context.createTexture2D(1, 1);\n        }\n    }\n\n    protected processData(context: GraferContext, data: unknown[], mappings: DataMappings<LabelData>): void {\n        const canvas = document.createElement('canvas');\n        canvas.setAttribute('style', 'font-smooth: never;-webkit-font-smoothing : none;');\n\n        const ctx = canvas.getContext('2d');\n        const boxes = [];\n        for (const [, entry] of dataIterator(data, mappings)) {\n            const image = this.computeDistanceField(this.renderLabelTexture(entry, ctx, canvas), entry.fontSize);\n            boxes.push({ id: entry.id, w: image.width + kImageMargin * 2, h: image.height + kImageMargin * 2, image });\n        }\n\n        const pack = potpack(boxes);\n        const finalImage = ctx.createImageData(pack.w, pack.h);\n\n        const buffer = packData(boxes, kLabelBoxDataMappings, kLabelBoxDataTypes, true, ((i) => {\n            const box = boxes[i];\n            this.labelMap.set(box.id, i);\n            this.blitImageData(box.image, finalImage, box.x + kImageMargin, finalImage.height - box.y - box.h + kImageMargin);\n        }));\n\n        this._labelsTexture = context.createTexture2D(finalImage as unknown as HTMLImageElement, {\n            flipY: true,\n            // premultiplyAlpha: true,\n            // magFilter: PicoGL.NEAREST,\n            // minFilter: PicoGL.NEAREST,\n        });\n\n        const uint16 = new Uint16Array(buffer);\n        const textureWidth = Math.pow(2 , Math.ceil(Math.log2(Math.ceil(Math.sqrt(data.length)))));\n        const textureHeight = Math.pow(2 , Math.ceil(Math.log2(Math.ceil(data.length / textureWidth))));\n        this._dataTexture = context.createTexture2D(textureWidth, textureHeight, {\n            internalFormat: PicoGL.RGBA16UI,\n        });\n        this._dataTexture.data(uint16);\n\n        // this.testFeedback(context);\n    }\n\n    protected renderLabelTexture(entry: LabelData, context: CanvasRenderingContext2D, canvas: HTMLCanvasElement): ImageData {\n        if (typeof entry.label === 'string') {\n            const label = entry.label || ' ';\n            const pixelRatio = this.labelPixelRatio;\n            const outlineWidth = 3;\n\n            let horizontalPadding;\n            let verticalPadding;\n            if (Array.isArray(entry.padding)) {\n                horizontalPadding = entry.padding[0];\n                verticalPadding = entry.padding.length > 1 ? entry.padding[1] : entry.padding[0];\n            } else {\n                horizontalPadding = entry.padding;\n                verticalPadding = entry.padding;\n            }\n\n            context.font = `${entry.fontSize * pixelRatio}px ${entry.font}`;\n            context.imageSmoothingEnabled = false;\n\n            canvas.width = context.measureText(label).width + horizontalPadding * 2 * pixelRatio;\n            canvas.height = entry.fontSize * pixelRatio + verticalPadding * 2 * pixelRatio;\n\n            context.fillStyle = '#ff0000';\n            context.fillRect(0, 0, canvas.width, canvas.height);\n\n            context.font = `${entry.fontSize * pixelRatio}px ${entry.font}`;\n\n            if (entry.background) {\n                context.fillStyle = '#00ff66';\n                context.lineWidth = outlineWidth;\n                context.strokeStyle = '#00ffcc';\n                this.roundRect(\n                    context,\n                    outlineWidth,\n                    outlineWidth,\n                    canvas.width - outlineWidth * 2,\n                    canvas.height - outlineWidth * 2,\n                    Math.min(10, canvas.height * 0.25, canvas.width * 0.25),\n                    true\n                );\n            }\n\n            context.fillStyle = '#00ffff';\n            context.textAlign = 'center';\n            context.textBaseline = 'middle';\n            context.fillText(label, canvas.width * 0.5, canvas.height * 0.5);\n\n            return context.getImageData(0, 0, canvas.width, canvas.height);\n        }\n\n        return entry.label;\n    }\n\n    private roundRect(\n        context: CanvasRenderingContext2D,\n        x: number,\n        y: number,\n        width: number,\n        height: number,\n        radius = 5,\n        fill = true,\n        stroke = true\n    ): void {\n        context.beginPath();\n        context.moveTo(x + radius, y);\n        context.lineTo(x + width - radius, y);\n        context.quadraticCurveTo(x + width, y, x + width, y + radius);\n        context.lineTo(x + width, y + height - radius);\n        context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        context.lineTo(x + radius, y + height);\n        context.quadraticCurveTo(x, y + height, x, y + height - radius);\n        context.lineTo(x, y + radius);\n        context.quadraticCurveTo(x, y, x + radius, y);\n        context.closePath();\n\n        if (stroke) {\n            context.stroke();\n        }\n\n        if (fill) {\n            context.fill();\n        }\n    }\n\n    private blitImageData(src: ImageData, dst: ImageData, x: number, y: number): void {\n        for (let yy = 0; yy < src.height; ++yy) {\n            const srcStart = src.width * yy * 4;\n            const srcEnd = srcStart + src.width * 4;\n            const dstOff = dst.width * (yy + y) * 4 + x * 4;\n            dst.data.set(src.data.subarray(srcStart, srcEnd), dstOff);\n        }\n    }\n\n    /* implementation based on: https://github.com/mapbox/tiny-sdf */\n    private computeDistanceField(imageData: ImageData, fontSize: number): ImageData {\n        const dataLength = imageData.width * imageData.height;\n\n        // temporary arrays for the distance transform\n        const maxDimension = Math.max(imageData.width, imageData.height);\n        const gridOuter = new Float64Array(dataLength);\n        const gridInner = new Float64Array(dataLength);\n        const f = new Float64Array(maxDimension);\n        const z = new Float64Array(maxDimension + 1);\n        const v = new Uint16Array(maxDimension);\n\n        for (let i = 0; i < dataLength; ++i) {\n            const a = imageData.data[i * 4 + 1] / 255; // alpha value from green channel\n            gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\n            gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\n        }\n\n        this.edt(gridOuter, imageData.width, imageData.height, f, v, z);\n        this.edt(gridInner, imageData.width, imageData.height, f, v, z);\n\n        const radius = fontSize / 3;\n        const data = imageData.data;\n        for (let i = 0; i < dataLength; ++i) {\n            const d = Math.sqrt(gridOuter[i]) - Math.sqrt(gridInner[i]);\n            const p = i * 4;\n\n            const a = data[p + 3] / 255;\n            // de-multiply the alpha\n            const gray = Math.min(255, (data[p] + data[p + 2]) / a); // the sum between the red and blue channels\n            data[p] = gray;\n            data[p + 1] = gray;\n            data[p + 2] = gray;\n            data[p + 3] = Math.round(255 - 255 * (d / radius + 0.5));\n        }\n\n        return imageData;\n    }\n\n    // 2D Euclidean squared distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\n    private edt(data: Float64Array, width: number, height: number, f: Float64Array, v: Uint16Array, z: Float64Array): void {\n        for (let x = 0; x < width; ++x) {\n            this.edt1d(data, x, width, height, f, v, z);\n        }\n\n        for (let y = 0; y < height; ++y) {\n            this.edt1d(data, y * width, 1, width, f, v, z);\n        }\n    }\n\n    // 1D squared distance transform\n    private edt1d(grid: Float64Array, offset: number, stride: number, length: number, f: Float64Array, v: Uint16Array, z: Float64Array): void {\n        let q, k, s, r;\n\n        v[0] = 0;\n        z[0] = -INF;\n        z[1] = INF;\n\n        for (q = 0; q < length; ++q) {\n            f[q] = grid[offset + q * stride];\n        }\n\n        for (q = 1, k = 0, s = 0; q < length; ++q) {\n            do {\n                r = v[k];\n                s = (f[q] - f[r] + q * q - r * r) / (q - r) / 2;\n            } while (s <= z[k] && --k > -1);\n\n            ++k;\n            v[k] = q;\n            z[k] = s;\n            z[k + 1] = INF;\n        }\n\n        for (q = 0, k = 0; q < length; ++q) {\n            while (z[k + 1] < q) {\n                ++k;\n            }\n            r = v[k];\n            grid[offset + q * stride] = f[r] + (q - r) * (q - r);\n        }\n    }\n\n    private testFeedback(context: App): void {\n        const program = context.createProgram(testVS, testFS, { transformFeedbackVaryings: [ 'vBox' ], transformFeedbackMode: PicoGL.INTERLEAVED_ATTRIBS });\n        const pointsTarget = context.createVertexBuffer(PicoGL.FLOAT, 4, 40);\n        const pointsIndices = context.createVertexBuffer(PicoGL.UNSIGNED_BYTE, 1, new Uint8Array([\n            0,\n            1,\n            2,\n            3,\n            4,\n            5,\n        ]));\n\n        const transformFeedback = context.createTransformFeedback().feedbackBuffer(0, pointsTarget);\n        const vertexArray = context.createVertexArray().vertexAttributeBuffer(0, pointsIndices);\n\n        const drawCall = context.createDrawCall(program, vertexArray).transformFeedback(transformFeedback);\n        drawCall.primitive(PicoGL.POINTS);\n        drawCall.texture('uDataTexture', this._dataTexture);\n        context.enable(PicoGL.RASTERIZER_DISCARD);\n        drawCall.draw();\n        context.disable(PicoGL.RASTERIZER_DISCARD);\n\n        printDataGL(context, pointsTarget, 6, {\n            box: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n        });\n    }\n}\n\n\n","import nodeFS from './PointLabel.fs.glsl';\nimport nodeVS from './PointLabel.vs.glsl';\nimport dataVS from './PointLabel.data.vs.glsl';\n\nimport {\n    GLDataTypes,\n    RenderableShaders,\n    RenderMode,\n    RenderUniforms,\n    setDrawCallUniforms,\n} from '../../../renderer/Renderable';\nimport {Nodes} from '../../nodes/Nodes';\nimport {DataMappings, DataShader} from '../../../data/DataTools';\nimport PicoGL, {App, DrawCall, Program, VertexArray, VertexBuffer} from 'picogl';\nimport {GraphPoints} from '../../../data/GraphPoints';\nimport {PickingManager} from '../../../UX/picking/PickingManager';\nimport {GLCircleNodeTypes} from '../../nodes/circle/Circle';\nimport {GraferContext} from '../../../renderer/GraferContext';\nimport {kLabelMappings, LabelAtlas, LabelData} from '../LabelAtlas';\nimport {GraferInputColor} from '../../../renderer/ColorRegistry';\n\nexport interface LabelNodeData extends Omit<LabelData, 'label'> {\n    point: number | string;\n    color?: GraferInputColor;\n    label: string | ImageData | number;\n}\n\nexport const kLabelNodeMappings: DataMappings<LabelNodeData> = Object.assign({}, kLabelMappings, {\n    point: (entry: LabelNodeData, i) => 'point' in entry ? entry.point : i,\n    color: (entry: any) => 'color' in entry ? entry.color : 0, // first registered color\n}) as DataMappings<LabelNodeData>;\n\nexport const kLabelNodeDataTypes: GLDataTypes<LabelNodeData> = {\n    point: PicoGL.UNSIGNED_INT,\n    color: PicoGL.UNSIGNED_INT,\n    label: PicoGL.UNSIGNED_INT,\n};\n\nexport const kGLLabelNodeTypes = {\n    // TODO: maybe use points indices?\n    position: [PicoGL.FLOAT, PicoGL.FLOAT, PicoGL.FLOAT],\n    // TODO: maybe skip and use vertex indices when point radius is used.\n    radius: PicoGL.FLOAT,\n    // TODO: Create a color texture and use indices here.\n    color: PicoGL.UNSIGNED_INT,\n\n    box: PicoGL.UNSIGNED_INT,\n} as const;\nexport type GLLabelNodeTypes = typeof kGLLabelNodeTypes;\n\nexport enum PointLabelPlacement {\n    CENTER,\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n}\n\nexport class PointLabel extends Nodes<LabelNodeData, GLLabelNodeTypes> {\n    protected program: Program;\n    protected drawCall: DrawCall;\n\n    protected verticesVBO: VertexBuffer;\n    protected nodesVAO: VertexArray;\n\n    protected labelAtlas: LabelAtlas;\n\n    protected _labelPlacement: unknown = PointLabelPlacement.CENTER;\n\n    public get labelPlacement(): PointLabelPlacement | unknown {\n        return this._labelPlacement;\n    }\n    public set labelPlacement(value: PointLabelPlacement | unknown) {\n        this._labelPlacement = value;\n        switch (this._labelPlacement) {\n            case PointLabelPlacement.CENTER:\n                this.localUniforms.uLabelPlacement = [0 ,0];\n                break;\n\n            case PointLabelPlacement.BOTTOM:\n                this.localUniforms.uLabelPlacement = [0, -1];\n                break;\n\n            case PointLabelPlacement.TOP:\n                this.localUniforms.uLabelPlacement = [0, 1];\n                break;\n\n            case PointLabelPlacement.LEFT:\n                this.localUniforms.uLabelPlacement = [-1, 0];\n                break;\n\n            case PointLabelPlacement.RIGHT:\n                this.localUniforms.uLabelPlacement = [1, 0];\n                break;\n        }\n    }\n\n    public get visibilityThreshold(): number {\n        return this.localUniforms.uVisibilityThreshold as number;\n    }\n    public set visibilityThreshold(value: number) {\n        this.localUniforms.uVisibilityThreshold = value;\n    }\n\n    constructor(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<LabelNodeData>>,\n        pickingManager: PickingManager,\n        labelAtlas?: LabelAtlas\n    );\n    constructor(...args: any[]) {\n        super(...args);\n    }\n\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<LabelNodeData>>,\n        pickingManager: PickingManager,\n        labelAtlas?: LabelAtlas\n    ): void {\n        if (labelAtlas) {\n            this.labelAtlas = labelAtlas;\n        } else {\n            this.labelAtlas = new LabelAtlas(context, data, mappings as Partial<DataMappings<LabelData>>);\n        }\n\n        super.initialize(context, points, data, mappings, pickingManager);\n\n        this.verticesVBO = context.createVertexBuffer(PicoGL.FLOAT, 2, new Float32Array([\n            -1, -1,\n            1, -1,\n            -1, 1,\n            1, 1,\n        ]));\n\n        this.nodesVAO = context.createVertexArray().vertexAttributeBuffer(0, this.verticesVBO);\n        this.configureTargetVAO(this.nodesVAO);\n\n        const shaders = this.getDrawShaders();\n        this.program = context.createProgram(shaders.vs, shaders.fs);\n        this.drawCall = context.createDrawCall(this.program, this.nodesVAO).primitive(PicoGL.TRIANGLE_STRIP);\n\n        this.compute(context, {\n            uGraphPoints: this.dataTexture,\n        });\n\n        this.localUniforms.uLabelBoxes = this.labelAtlas.dataTexture;\n        this.localUniforms.uLabelTexture = this.labelAtlas.labelsTexture;\n        this.localUniforms.uVisibilityThreshold = 15;\n        this.localUniforms.uLabelPlacement = [0, 0];\n    }\n\n    public destroy(): void {\n        //\n    }\n\n    public render(context: App, mode: RenderMode, uniforms: RenderUniforms): void {\n        context.depthRange(this.nearDepth, this.farDepth);\n\n        switch (mode) {\n            case RenderMode.DRAFT:\n            case RenderMode.MEDIUM:\n            case RenderMode.HIGH_PASS_1:\n                context.disable(PicoGL.BLEND);\n                context.depthMask(true);\n\n                setDrawCallUniforms(this.drawCall, uniforms);\n                setDrawCallUniforms(this.drawCall, this.localUniforms);\n                this.drawCall.draw();\n                break;\n\n            case RenderMode.HIGH_PASS_2:\n                context.enable(PicoGL.BLEND);\n                // context.blendFuncSeparate(PicoGL.ONE, PicoGL.ONE_MINUS_SRC_ALPHA, PicoGL.ONE, PicoGL.ONE_MINUS_SRC_ALPHA);\n                context.depthMask(false);\n                // context.depthFunc(PicoGL.LEQUAL);\n\n                setDrawCallUniforms(this.drawCall, uniforms);\n                setDrawCallUniforms(this.drawCall, this.localUniforms);\n                this.drawCall.draw();\n\n                // context.depthFunc(PicoGL.LESS);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    protected getDrawShaders(): RenderableShaders {\n        return {\n            vs: nodeVS,\n            fs: nodeFS,\n        };\n    }\n\n    protected getGLSourceTypes(): GLDataTypes<LabelNodeData> {\n        return kLabelNodeDataTypes;\n    }\n\n    protected getGLTargetTypes(): GLDataTypes<GLCircleNodeTypes> {\n        return kGLLabelNodeTypes;\n    }\n\n    protected getDataShader(): DataShader {\n        return {\n            vs: dataVS,\n            varyings: [ 'vPosition', 'vRadius', 'vColor', 'vBox' ],\n        };\n    }\n\n    protected computeMappings(mappings: Partial<DataMappings<LabelNodeData>>): DataMappings<LabelNodeData> {\n        const dataMappings = Object.assign({}, kLabelNodeMappings, super.computeMappings(mappings));\n        const idMapping = dataMappings.id;\n        dataMappings.label = (entry: any, i): number => this.labelAtlas.labelMap.get(idMapping(entry, i));\n\n        return dataMappings;\n    }\n}\n","import {LabelNodeData, PointLabel} from '../point/PointLabel';\nimport {RenderableShaders} from '../../../renderer/Renderable';\nimport nodeVS from './CircularLabel.vs.glsl';\nimport nodeFS from './CircularLabel.fs.glsl';\nimport {GraferContext} from '../../../renderer/GraferContext';\nimport {GraphPoints} from '../../../data/GraphPoints';\nimport {DataMappings} from '../../../data/DataTools';\nimport {PickingManager} from '../../../UX/picking/PickingManager';\nimport {LabelAtlas} from '../LabelAtlas';\n\nexport enum CircularLabelPlacement {\n    INSIDE = 0,\n    OUTSIDE = 1,\n}\n\nexport class CircularLabel extends PointLabel {\n\n    public get repeatLabel(): number {\n        return this.localUniforms.uRepeatLabel as number;\n    }\n    public set repeatLabel(value: number) {\n        this.localUniforms.uRepeatLabel = value;\n    }\n\n    public get repeatGap(): number {\n        return this.localUniforms.uRepeatGap as number;\n    }\n    public set repeatGap(value: number) {\n        this.localUniforms.uRepeatGap = value;\n    }\n\n    public get placementMargin(): number {\n        return this.localUniforms.uPlacementMargin as number;\n    }\n    public set placementMargin(value: number) {\n        this.localUniforms.uPlacementMargin = value;\n    }\n\n    public get mirror(): boolean {\n        return this.localUniforms.uMirror as boolean;\n    }\n    public set mirror(value: boolean) {\n        this.localUniforms.uMirror = value;\n    }\n\n    public get labelPlacement(): CircularLabelPlacement {\n        return this.localUniforms.uLabelPlacement as CircularLabelPlacement;\n    }\n    public set labelPlacement(value: CircularLabelPlacement) {\n        this.localUniforms.uLabelPlacement = value;\n    }\n\n    protected _labelDirection: number;\n    public get labelDirection(): number {\n        return this._labelDirection;\n    }\n    public set labelDirection(value: number) {\n        const rad = value * 0.0174533;\n        this.localUniforms.uLabelDirection = [Math.cos(rad), Math.sin(rad)];\n    }\n\n    protected initialize(\n        context: GraferContext,\n        points: GraphPoints,\n        data: unknown[],\n        mappings: Partial<DataMappings<LabelNodeData>>,\n        pickingManager: PickingManager,\n        labelAtlas?: LabelAtlas\n    ): void {\n        super.initialize(context, points, data, mappings, pickingManager, labelAtlas);\n        this.localUniforms.uRepeatLabel = -1;\n        this.localUniforms.uRepeatGap = 5;\n        this.localUniforms.uPlacementMargin = 0;\n        this.localUniforms.uMirror = false;\n        this.localUniforms.uLabelPlacement = CircularLabelPlacement.OUTSIDE;\n        this.labelDirection = 90;\n    }\n\n    protected getDrawShaders(): RenderableShaders {\n        return {\n            vs: nodeVS,\n            fs: nodeFS,\n        };\n    }\n}\n","import nodeVS from './RingLabel.vs.glsl';\nimport nodeFS from './RingLabel.fs.glsl';\nimport {CircularLabel} from '../circular/CircularLabel';\nimport {RenderableShaders} from '../../../renderer/Renderable';\n\nexport class RingLabel extends CircularLabel {\n    protected getDrawShaders(): RenderableShaders {\n        return {\n            vs: nodeVS,\n            fs: nodeFS,\n        };\n    }\n}\n","export  * from './point/PointLabel';\nexport * from './circular/CircularLabel';\nexport * from './ring/RingLabel';\n\nimport {PointLabel} from './point/PointLabel';\nimport {CircularLabel} from './circular/CircularLabel';\nimport {RingLabel} from './ring/RingLabel';\n\nconst types = {\n    PointLabel,\n    CircularLabel,\n    RingLabel,\n};\n\nexport {types};\n\nexport * from './LabelAtlas';\n","import {RenderMode, RenderUniforms} from '../renderer/Renderable';\nimport {App} from 'picogl';\nimport {Nodes} from './nodes/Nodes';\nimport {Edges} from './edges/Edges';\nimport {GraphRenderable} from './GraphRenderable';\nimport {EventEmitter} from '@dekkai/event-emitter/build/lib/EventEmitter';\nimport {LayerRenderable} from './LayerRenderable';\n\nexport class Layer extends EventEmitter implements GraphRenderable {\n    private _nodes: Nodes<any, any>;\n    public get nodes(): Nodes<any, any> {\n        return this._nodes;\n    }\n\n    private _edges: Edges<any, any> | null;\n    public get edges(): Edges<any, any> | null {\n        return this._edges;\n    }\n\n    private _labels: LayerRenderable<any, any> | null;\n    public get labels(): LayerRenderable<any, any> | null {\n        return this._labels;\n    }\n\n    private _nearDepth: number = 0.0;\n    public get nearDepth(): number {\n        return this._nearDepth;\n    }\n    public set nearDepth(value: number) {\n        this._nearDepth = value;\n        this.updateLabelsDepths();\n        this.updateNodesDepths();\n        this.updateEdgesDepths();\n    }\n\n    private _farDepth: number = 1.0;\n    public get farDepth(): number {\n        return this._farDepth;\n    }\n    public set farDepth(value: number) {\n        this._farDepth = value;\n        this.updateLabelsDepths();\n        this.updateNodesDepths();\n        this.updateEdgesDepths();\n    }\n\n    private _nodesNearDepth: number = 0;\n    public get nodesNearDepth(): number {\n        return this._nodesNearDepth;\n    }\n    public set nodesNearDepth(value: number) {\n        this._nodesNearDepth = value;\n        this.updateNodesDepths();\n    }\n\n    private _nodesFarDepth: number = 1;\n    public get nodesFarDepth(): number {\n        return this._nodesFarDepth;\n    }\n    public set nodesFarDepth(value: number) {\n        this._nodesFarDepth = value;\n        this.updateNodesDepths();\n    }\n\n    private _edgesNearDepth: number = 0;\n    public get edgesNearDepth(): number {\n        return this._edgesNearDepth;\n    }\n    public set edgesNearDepth(value: number) {\n        this._edgesNearDepth = value;\n        this.updateEdgesDepths();\n    }\n\n    private _edgesFarDepth: number = 1;\n    public get edgesFarDepth(): number {\n        return this._edgesFarDepth;\n    }\n    public set edgesFarDepth(value: number) {\n        this._edgesFarDepth = value;\n        this.updateEdgesDepths();\n    }\n\n    private _labelsNearDepth: number = 0;\n    public get labelsNearDepth(): number {\n        return this._labelsNearDepth;\n    }\n    public set labelsNearDepth(value: number) {\n        this._labelsNearDepth = value;\n        this.updateLabelsDepths();\n    }\n\n    private _labelsFarDepth: number = 1;\n    public get labelsFarDepth(): number {\n        return this._labelsFarDepth;\n    }\n    public set labelsFarDepth(value: number) {\n        this._labelsFarDepth = value;\n        this.updateLabelsDepths();\n    }\n\n    public enabled: boolean = true;\n    public name: string;\n\n    public constructor(nodes: Nodes<any, any>, edges: Edges<any, any>, labels: LayerRenderable<any, any>, name = 'Layer') {\n        super();\n        this._nodes = nodes;\n        this._edges = edges;\n        this._labels = labels;\n        this.name = name;\n\n        if (this._nodes) {\n            this._nodes.on(EventEmitter.omniEvent, (event, id: string | number): void => {\n                this.emit(event, {\n                    layer: this.name,\n                    type: 'node',\n                    id,\n                });\n            });\n        }\n\n        if (this._edges) {\n            this._edges.on(EventEmitter.omniEvent, (event, id: string | number): void => {\n                this.emit(event, {\n                    layer: this.name,\n                    type: 'edge',\n                    id,\n                });\n            });\n        }\n    }\n\n    public render(context: App, mode: RenderMode, uniforms: RenderUniforms): void {\n        this.renderLabels(context, mode, uniforms);\n        this.renderNodes(context, mode, uniforms);\n        this.renderEdges(context, mode, uniforms);\n    }\n\n    public renderNodes(context: App, mode: RenderMode, uniforms: RenderUniforms): void {\n        if (this._nodes && this._nodes.enabled) {\n            this._nodes.render(context, mode, uniforms);\n        }\n    }\n\n    public renderEdges(context: App, mode: RenderMode, uniforms: RenderUniforms): void {\n        if (this._edges && this._edges.enabled) {\n            this._edges.render(context, mode, uniforms);\n        }\n    }\n\n    public renderLabels(context: App, mode: RenderMode, uniforms: RenderUniforms): void {\n        if (this._labels && this.labels.enabled) {\n            this._labels.render(context, mode, uniforms);\n        }\n    }\n\n    private updateLabelsDepths(): void {\n        if (this._labels) {\n            const depthRange = this._farDepth - this._nearDepth;\n            this._labels.nearDepth = this._nearDepth + depthRange * this._labelsNearDepth;\n            this._labels.farDepth = this._nearDepth + depthRange * this._labelsFarDepth;\n        }\n    }\n\n    private updateNodesDepths(): void {\n        if (this._nodes) {\n            const depthRange = this._farDepth - this._nearDepth;\n            this._nodes.nearDepth = this._nearDepth + depthRange * this._nodesNearDepth;\n            this._nodes.farDepth = this._nearDepth + depthRange * this._nodesFarDepth;\n        }\n    }\n\n    private updateEdgesDepths(): void {\n        if (this._edges) {\n            const depthRange = this._farDepth - this._nearDepth;\n            this._edges.nearDepth = this._nearDepth + depthRange * this._edgesNearDepth;\n            this._edges.farDepth = this._nearDepth + depthRange * this._edgesFarDepth;\n        }\n    }\n}\n","import {Viewport} from '../../../renderer/Viewport';\nimport {MouseState, MouseButtonName, MouseHandler} from '../MouseHandler';\nimport {vec2} from 'gl-matrix';\nimport {UXModule} from '../../UXModule';\n\nexport abstract class DragModule extends UXModule {\n    public button: MouseButtonName = 'primary';\n\n    protected viewport: Viewport;\n    private boundHandler: (arg1: symbol, arg2: MouseState, arg3: vec2) => void = this.handleMouse.bind(this);\n\n    constructor(viewport: Viewport, enabled: boolean = false) {\n        super();\n        this.viewport = viewport;\n        this.enabled = enabled;\n    }\n\n    protected hookEvents(): void {\n        this.viewport.mouseHandler.on(MouseHandler.events.move, this.boundHandler);\n    }\n\n    protected unhookEvents(): void {\n        this.viewport.mouseHandler.off(MouseHandler.events.move, this.boundHandler);\n    }\n\n    protected abstract handleMouse(event: symbol, state: MouseState, delta: vec2): void;\n}\n","import {DragModule} from './DragModule';\nimport {MouseState} from '../MouseHandler';\nimport {quat, vec2, vec3} from 'gl-matrix';\n\nexport class DragTruck extends DragModule {\n    protected handleMouse(event: symbol, state: MouseState, delta: vec2): void {\n        if (state.buttons[this.button]) {\n            const position = this.viewport.camera.position;\n            const rotated = vec3.transformQuat(vec3.create(), position, this.viewport.camera.rotation);\n            const distance = Math.abs(rotated[2]); // vec3.length(position); // use the rotated z distance instead\n            const vertical = this.viewport.camera.aovRad * distance; // good enough approximation\n            const pixelToWorld = vertical / this.viewport.rect.height;\n\n            const delta3 = vec3.fromValues(delta[0] * pixelToWorld, delta[1] * -pixelToWorld, 0);\n            const inverse = quat.invert(quat.create(), this.viewport.camera.rotation);\n            vec3.transformQuat(delta3, delta3, inverse);\n\n            vec3.add(position, position, delta3);\n            this.viewport.camera.position = position;\n\n            this.viewport.render();\n        }\n    }\n}\n","import {MouseState, MouseButtonName} from '../MouseHandler';\nimport {quat, vec2} from 'gl-matrix';\nimport {DragModule} from './DragModule';\n\nexport class DragRotation extends DragModule {\n    public button: MouseButtonName = 'secondary';\n\n    protected handleMouse(event: symbol, state: MouseState, delta: vec2): void {\n        if (state.buttons[this.button]) {\n            const side = Math.min(this.viewport.size[0], this.viewport.size[1]);\n            const rawRotation = quat.fromEuler(quat.create(), (delta[1] / side) * 90, (delta[0] / side) * 90, 0);\n            const camInverse = quat.invert(quat.create(), this.viewport.camera.rotation);\n            const rotation = quat.mul(quat.create(), camInverse, rawRotation);\n            quat.mul(rotation, rotation, this.viewport.camera.rotation);\n            this.viewport.graph.rotate(rotation);\n            this.viewport.render();\n        }\n    }\n}\n","import {Viewport} from '../../../renderer/Viewport';\nimport {MouseHandler, MouseState} from '../MouseHandler';\nimport {UXModule} from '../../UXModule';\n\nexport abstract class ScrollModule extends UXModule {\n    public speed: number = 4.5;\n\n    protected viewport: Viewport;\n    private boundHandler: (arg1: symbol, arg2: MouseState, arg3: number) => void = this.handleMouse.bind(this);\n\n    constructor(viewport: Viewport, enabled: boolean = false) {\n        super();\n        this.viewport = viewport;\n        this.enabled = enabled;\n    }\n\n    protected hookEvents(): void {\n        this.viewport.mouseHandler.on(MouseHandler.events.wheel, this.boundHandler);\n    }\n\n    protected unhookEvents(): void {\n        this.viewport.mouseHandler.off(MouseHandler.events.wheel, this.boundHandler);\n    }\n\n    protected abstract handleMouse(event: symbol, state: MouseState, delta: number): void;\n}\n\n","import {MouseState} from '../MouseHandler';\nimport {mat4, vec2, vec3, vec4} from 'gl-matrix';\nimport {ScrollModule} from './ScrollModule';\n\nexport class ScrollDolly extends ScrollModule {\n    protected handleMouse(event: symbol, state: MouseState, delta: number): void {\n        const invProjection = mat4.invert(mat4.create(), this.viewport.camera.projectionMatrix);\n        const invView = mat4.invert(mat4.create(), this.viewport.camera.viewMatrix);\n\n        const viewportCoords = vec2.fromValues(\n            state.canvasCoords[0] * this.viewport.pixelRatio,\n            state.canvasCoords[1] * this.viewport.pixelRatio\n        );\n        const worldCoords = vec2.fromValues(\n            (2.0 * viewportCoords[0]) / this.viewport.size[0] - 1.0,\n            1.0 - (2.0 * viewportCoords[1]) / this.viewport.size[1]\n        );\n        const rayClip = vec4.fromValues(worldCoords[0], worldCoords[1], -1, 1);\n\n        const rayEye = vec4.transformMat4(vec4.create(), rayClip, invProjection);\n        rayEye[2] = -1.0;\n        rayEye[3] = 0.0;\n\n        const rayWorld4 = vec4.transformMat4(vec4.create(), rayEye, invView);\n        const rayWorld = vec3.fromValues(rayWorld4[0], rayWorld4[1], rayWorld4[2]);\n        vec3.normalize(rayWorld, rayWorld);\n\n        const position = this.viewport.camera.position;\n        const zMult = position[2] / rayWorld[2];\n        const rayZeroZ = vec3.fromValues(position[0] + rayWorld[0] * zMult, position[1] + rayWorld[1] * zMult, 0.0);\n        const distance = Math.max(100.0, vec3.distance(position, rayZeroZ));\n        const speed = this.speed * (distance / 100.0);\n        vec3.scaleAndAdd(position, position, rayWorld, delta * speed);\n\n        this.viewport.camera.position = position;\n\n        this.viewport.render();\n    }\n}\n","import {MouseState} from '../MouseHandler';\nimport {vec2, quat} from 'gl-matrix';\nimport {DragModule} from './DragModule';\n\nexport class DragPan extends DragModule {\n    protected handleMouse(event: symbol, state: MouseState, delta: vec2): void {\n        if (state.buttons[this.button]) {\n            const aspect = this.viewport.size[0] / this.viewport.size[1];\n\n            const aov = this.viewport.camera.aov;\n            const rotationX = -aov * (delta[1] / this.viewport.rect.height);\n            const rotationY = -aov * (delta[0] / this.viewport.rect.width) * aspect;\n\n            const r = quat.fromEuler(quat.create(), rotationX, rotationY, 0);\n            this.viewport.camera.rotate(r);\n\n            this.viewport.render();\n        }\n    }\n}\n","import {Viewport} from '../renderer/Viewport';\nimport {PointDataMappings} from '../data/GraphPoints';\nimport {nodes as GraphNodes, edges as GraphEdges, labels as GraphLabels, Graph} from '../graph/mod';\nimport {Layer} from '../graph/Layer';\nimport {DragTruck} from '../UX/mouse/drag/DragTruck';\nimport {DragRotation} from '../UX/mouse/drag/DragRotation';\nimport {ScrollDolly} from '../UX/mouse/scroll/ScrollDolly';\nimport {DragPan} from '../UX/mouse/drag/DragPan';\nimport {GraferInputColor} from '../renderer/ColorRegistry';\nimport {PickingManager} from '../UX/picking/PickingManager';\nimport {EventEmitter} from '@dekkai/event-emitter/build/lib/EventEmitter';\nimport {GraferContext} from '../renderer/GraferContext';\n\nexport type GraferNodesType = keyof typeof GraphNodes.types;\nexport type GraferEdgesType = keyof typeof GraphEdges.types;\nexport type GraferLabelsType = keyof typeof GraphLabels.types;\n\nexport interface GraferDataInput<T> {\n    data: unknown[],\n    mappings?: Partial<T>,\n}\n\nexport type GraferPointsData = GraferDataInput<PointDataMappings>;\n\nexport interface GraferElementData<T> extends GraferDataInput<any> {\n    type?: T;\n    options?: { [key: string]: any };\n}\n\nexport type GraferNodesData = GraferElementData<GraferNodesType>;\nexport type GraferEdgesData = GraferElementData<GraferEdgesType>;\nexport type GraferLabelsData = GraferElementData<GraferLabelsType>;\n\ninterface GraferLayerDataBase {\n    id?: number | string;\n    name?: string;\n    nodes?: GraferNodesData;\n    edges?: GraferEdgesData;\n    labels?: GraferLabelsData;\n}\n\n// layers should at least have one of nodes, edges or labels\nexport type GraferLayerData = GraferLayerDataBase & ({ nodes: GraferNodesData } | { edges: GraferEdgesData } | { labels: GraferLabelsData });\n\nexport interface GraferControllerData {\n    colors?: GraferInputColor[];\n    points?: GraferPointsData;\n    layers?: GraferLayerData[];\n}\n\nexport class GraferController extends EventEmitter {\n    private _viewport: Viewport;\n    public get viewport(): Viewport {\n        return this._viewport;\n    }\n    public get context(): GraferContext {\n        return this.viewport.context;\n    }\n    private _hasColors: boolean;\n    public get hasColors(): boolean {\n        return this._hasColors;\n    }\n    private _generateIdPrev: number;\n\n    constructor(canvas: HTMLCanvasElement, data?: GraferControllerData) {\n        super();\n        this._viewport = new Viewport(canvas);\n        this._generateIdPrev = 0;\n\n        const dolly = new ScrollDolly(this._viewport);\n        dolly.enabled = true;\n\n        const truck = new DragTruck(this._viewport);\n        truck.button = 'primary';\n        truck.enabled = true;\n\n        const rotation = new DragRotation(this._viewport);\n        rotation.button = 'secondary';\n        rotation.enabled = true;\n\n        const pan = new DragPan(this._viewport);\n        pan.button = 'auxiliary';\n        pan.enabled = true;\n\n        if (data) {\n            this.loadData(data);\n        }\n    }\n\n    private generateId(): number {\n        return this._generateIdPrev++;\n    }\n\n    private loadData(data: GraferControllerData): void {\n        const pointsRadiusMapping = { radius: (entry: any): number => 'radius' in entry ? entry.radius : 1.0 };\n\n        this.loadColors(data);\n        this.loadPoints(data, pointsRadiusMapping);\n        this.loadLayers(data, pointsRadiusMapping);\n\n        if (this._viewport.graph) {\n            this._viewport.camera.position = [0, 0, -this._viewport.graph.bbCornerLength * 2];\n            this._viewport.camera.farPlane = Math.max(this._viewport.graph.bbCornerLength * 4, 1000);\n            this._viewport.render();\n        }\n    }\n\n    public render(): void {\n        if (this._viewport.graph) {\n            this._viewport.render();\n        }\n        else {\n            throw new Error('No graph found.');\n        }\n    }\n\n    private concatenateNodesFromLayers(data: GraferControllerData): unknown[][] {\n        const nodes = [];\n        const layers = data.layers;\n        for (let i = 0, n = layers.length; i < n; ++i) {\n            const data = layers[i].nodes?.data ?? layers[i].labels?.data;\n            for (let ii = 0, nn = data.length; ii < nn; ++ii) {\n                (data[ii] as any).point = this.generateId();\n            }\n            nodes.push(layers[i].nodes.data);\n        }\n        return nodes;\n    }\n\n    private loadLayers(data: GraferControllerData, pointsRadiusMapping: { radius: (entry: any) => number; }): void {\n        if (data.layers && data.layers.length) {\n            const layers = data.layers;\n            this._hasColors = Boolean(data.colors);\n\n            if (!Boolean(this._viewport.graph)) {\n                const nodes = this.concatenateNodesFromLayers(data);\n                this._viewport.graph = Graph.createGraphFromNodes(this.context, nodes, pointsRadiusMapping);\n                this._viewport.graph.picking = new PickingManager(this._viewport.context, this._viewport.mouseHandler);\n            }\n\n            for (let i = 0, n = layers.length; i < n; ++i) {\n                const name = layers[i].name || `Layer_${i}`;\n                this.addLayer(layers[i], name, this.hasColors);\n            }\n        }\n    }\n\n    public addLayer(layer: GraferLayerData, name: string, useColors?: boolean): void {\n        if( useColors && !this.hasColors ) {\n            throw new Error('No colors found.');\n        }\n        useColors = useColors ?? this.hasColors;\n\n        const hasPoints = Boolean(this._viewport.graph);\n        const graph = this._viewport.graph;\n\n        const nodesData = layer.nodes;\n        const nodes = this.addNodes(nodesData, useColors);\n\n        const edgesData = layer.edges;\n        if (edgesData && !nodes && !hasPoints) {\n            throw new Error('Cannot load an edge-only layer in a graph without points!');\n        }\n        const edges = this.addEdges(edgesData, nodes, useColors);\n\n        const layersData = layer.labels;\n        const labels = this.addLabels(layersData, useColors);\n\n        if (nodes || edges || labels) {\n            const layer = new Layer(nodes, edges, labels, name);\n            graph.layers.unshift(layer);\n            layer.on(EventEmitter.omniEvent, (...args) => this.emit(...args));\n        }\n    }\n\n    public removeLayerByName(name: string): void {\n        const {layers} = this._viewport.graph;\n        for (let i = 0; i < layers.length; i++) {\n            const layer = layers[i];\n            if (layer.name === name) {\n                this.removeLayerByIndex(i);\n                i--;\n            }\n        }\n    }\n\n    public removeLayerByIndex(index: number): void {\n        const {layers} = this._viewport.graph;\n        if (index >= 0 && index < layers.length) {\n            layers.splice(index, 1);\n        }\n    }\n\n    private addLabels(labelsData: GraferLabelsData, hasColors: boolean): any {\n        const pickingManager = this._viewport.graph.picking;\n        const context = this.context;\n        const graph = this._viewport.graph;\n        let labels = null;\n\n        if (labelsData) {\n            const labelsType = labelsData.type ? labelsData.type : 'PointLabel';\n            const LabelsClass = GraphLabels.types[labelsType] || GraphLabels.PointLabel;\n            const labelsMappings = Object.assign(\n                {},\n                LabelsClass.defaultMappings,\n                labelsData.mappings\n            );\n\n            if (!hasColors) {\n                const colorMapping = labelsMappings.color;\n                labelsMappings.color = (entry: any, i): number => {\n                    const value = colorMapping(entry, i);\n                    if (typeof value !== 'number') {\n                        return this._viewport.colorRegisrty.registerColor(value);\n                    }\n                    return value;\n                };\n            }\n\n            labels = new LabelsClass(context, graph, labelsData.data, labelsMappings, pickingManager);\n            if ('options' in labelsData) {\n                const options = labelsData.options;\n                const keys = Object.keys(options);\n                for (const key of keys) {\n                    if (key in labels) {\n                        labels[key] = options[key];\n                    }\n                }\n            }\n        }\n        return labels;\n    }\n\n    private addEdges(edgesData: GraferEdgesData, nodes: any, hasColors: boolean): any {\n        const pickingManager = this._viewport.graph.picking;\n        const context = this.context;\n        const graph = this._viewport.graph;\n        const hasPoints = Boolean(this._viewport.graph);\n        let edges = null;\n\n        if (edgesData) {\n            const edgesType = edgesData.type ? edgesData.type : 'Straight';\n            const EdgesClass = GraphEdges.types[edgesType] || GraphEdges.Straight;\n            const edgesMappings = Object.assign({}, EdgesClass.defaultMappings, edgesData.mappings);\n\n            if (!hasPoints) {\n                const sourceMapping = edgesMappings.source;\n                edgesMappings.source = (entry, i): number => {\n                    return nodes.getEntryPointID(sourceMapping(entry, i));\n                };\n\n                const targetMapping = edgesMappings.target;\n                edgesMappings.target = (entry, i): number => {\n                    return nodes.getEntryPointID(targetMapping(entry, i));\n                };\n            }\n\n            if (!hasColors) {\n                const sourceColorMapping = edgesMappings.sourceColor;\n                edgesMappings.sourceColor = (entry: any, i): number => {\n                    const value = sourceColorMapping(entry, i);\n                    if (typeof value !== 'number') {\n                        return this._viewport.colorRegisrty.registerColor(value);\n                    }\n                    return value;\n                };\n\n                const targetColorMapping = edgesMappings.targetColor;\n                edgesMappings.targetColor = (entry: any, i): number => {\n                    const value = targetColorMapping(entry, i);\n                    if (typeof value !== 'number') {\n                        return this._viewport.colorRegisrty.registerColor(value);\n                    }\n                    return value;\n                };\n            }\n\n            edges = new EdgesClass(context, graph, edgesData.data, edgesMappings, pickingManager);\n\n            if ('options' in edgesData) {\n                const options = edgesData.options;\n                const keys = Object.keys(options);\n                for (const key of keys) {\n                    if (key in edges) {\n                        edges[key] = options[key];\n                    }\n                }\n            }\n        }\n        return edges;\n    }\n\n    private addNodes(nodesData: GraferNodesData, hasColors: boolean): any {\n        const pickingManager = this._viewport.graph.picking;\n        const context = this.context;\n        const graph = this._viewport.graph;\n        let nodes = null;\n\n        if (nodesData) {\n            const nodesType = nodesData.type ? nodesData.type : 'Circle';\n            const NodesClass = GraphNodes.types[nodesType] || GraphNodes.Circle;\n            const nodesMappings = Object.assign(\n                {},\n                NodesClass.defaultMappings,\n                nodesData.mappings\n            );\n\n            if (!hasColors) {\n                const colorMapping = nodesMappings.color;\n                nodesMappings.color = (entry: any, i): number => {\n                    const value = colorMapping(entry, i);\n                    if (typeof value !== 'number') {\n                        return this._viewport.colorRegisrty.registerColor(value);\n                    }\n                    return value;\n                };\n            }\n\n            nodes = new NodesClass(context, graph, nodesData.data, nodesMappings, pickingManager);\n            if ('options' in nodesData) {\n                const options = nodesData.options;\n                const keys = Object.keys(options);\n                for (const key of keys) {\n                    if (key in nodes) {\n                        nodes[key] = options[key];\n                    }\n                }\n            }\n        }\n        return nodes;\n    }\n\n    private loadPoints(data: GraferControllerData, pointsRadiusMapping: { radius: (entry: any) => number; }): void {\n        if (data.points) {\n            const mappings = Object.assign({}, pointsRadiusMapping, data.points.mappings);\n            this._viewport.graph = new Graph(this._viewport.context, data.points.data, mappings);\n            this._viewport.graph.picking = new PickingManager(this._viewport.context, this._viewport.mouseHandler);\n        }\n    }\n\n    private loadColors(data: GraferControllerData): void {\n        if (data.colors) {\n            const colors = data.colors;\n            const colorRegisrty = this._viewport.colorRegisrty;\n            for (let i = 0, n = colors.length; i < n; ++i) {\n                colorRegisrty.registerColor(colors[i]);\n            }\n        } else {\n            // add at least one color in case the data does not have colors either\n            this._viewport.colorRegisrty.registerColor('#d8dee9');\n        }\n    }\n}\n"],"names":["vec3.fromValues","vec3.create","vec3.copy","quat.fromEuler","quat.create","mat4.create","vec2.copy","vec2.create","quat.copy","mat4.fromQuat","mat4.translate","quat.mul","mat4.perspective","vec2.fromValues","vec2.set","vec4.create","vec4.copy","vec3.length","mat4.fromRotationTranslation","noopFS","kEvents","nodeFS","pickingFS","dataVS","edgeVS","edgeFS","types","testVS","nodeVS","vec3.transformQuat","quat.invert","vec3.add","mat4.invert","vec4.fromValues","vec4.transformMat4","vec3.normalize","distance","vec3.distance","vec3.scaleAndAdd","GraphLabels.types","GraphLabels.PointLabel","GraphEdges.types","GraphEdges.Straight","GraphNodes.types","GraphNodes.Circle"],"mappings":"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"}